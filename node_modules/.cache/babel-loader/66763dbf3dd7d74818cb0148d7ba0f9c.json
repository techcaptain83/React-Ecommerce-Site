{"ast":null,"code":"import { useFormControlProps } from '@chakra-ui/form-control';\nimport { forwardRef, useMultiStyleConfig, omitThemingProps, StylesProvider, chakra, useStyles } from '@chakra-ui/system';\nimport { normalizeEventKey, isNull, focus, isBrowser, callAllHandlers, ariaAttr, minSafeInteger, maxSafeInteger, cx, __DEV__ } from '@chakra-ui/utils';\nimport { mergeRefs, createContext } from '@chakra-ui/react-utils';\nimport * as React from 'react';\nimport { useState, useRef, useCallback } from 'react';\nimport { Icon } from '@chakra-ui/icon';\nimport { useCounter } from '@chakra-ui/counter';\nimport { useInterval, useUnmountEffect, useCallbackRef, useBoolean, useSafeLayoutEffect, useEventListener } from '@chakra-ui/hooks';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar TriangleDownIcon = function TriangleDownIcon(props) {\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    viewBox: \"0 0 24 24\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M21,5H3C2.621,5,2.275,5.214,2.105,5.553C1.937,5.892,1.973,6.297,2.2,6.6l9,12 c0.188,0.252,0.485,0.4,0.8,0.4s0.611-0.148,0.8-0.4l9-12c0.228-0.303,0.264-0.708,0.095-1.047C21.725,5.214,21.379,5,21,5z\"\n  }));\n};\n\nvar TriangleUpIcon = function TriangleUpIcon(props) {\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    viewBox: \"0 0 24 24\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M12.8,5.4c-0.377-0.504-1.223-0.504-1.6,0l-9,12c-0.228,0.303-0.264,0.708-0.095,1.047 C2.275,18.786,2.621,19,3,19h18c0.379,0,0.725-0.214,0.895-0.553c0.169-0.339,0.133-0.744-0.095-1.047L12.8,5.4z\"\n  }));\n};\n/**\n * When click and hold on a button - the speed of auto changing the value.\n */\n\n\nvar CONTINUOUS_CHANGE_INTERVAL = 50;\n/**\n * When click and hold on a button - the delay before auto changing the value.\n */\n\nvar CONTINUOUS_CHANGE_DELAY = 300;\n/**\n * React hook used in the number input to spin its\n * value on long press of the spin buttons\n *\n * @param increment the function to increment\n * @param decrement the function to decrement\n */\n\nfunction useSpinner(increment, decrement) {\n  /**\n   * To keep incrementing/decrementing on press, we call that `spinning`\n   */\n  var _useState = useState(false),\n      isSpinning = _useState[0],\n      setIsSpinning = _useState[1]; // This state keeps track of the action (\"increment\" or \"decrement\")\n\n\n  var _useState2 = useState(null),\n      action = _useState2[0],\n      setAction = _useState2[1]; // To increment the value the first time you mousedown, we call that `runOnce`\n\n\n  var _useState3 = useState(true),\n      runOnce = _useState3[0],\n      setRunOnce = _useState3[1]; // Store the timeout instance id in a ref, so we can clear the timeout later\n\n\n  var timeoutRef = useRef(null); // Clears the timeout from memory\n\n  var removeTimeout = function removeTimeout() {\n    return clearTimeout(timeoutRef.current);\n  };\n  /**\n   * useInterval hook provides a performant way to\n   * update the state value at specific interval\n   */\n\n\n  useInterval(function () {\n    if (action === \"increment\") {\n      increment();\n    }\n\n    if (action === \"decrement\") {\n      decrement();\n    }\n  }, isSpinning ? CONTINUOUS_CHANGE_INTERVAL : null); // Function to activate the spinning and increment the value\n\n  var up = useCallback(function () {\n    // increment the first fime\n    if (runOnce) {\n      increment();\n    } // after a delay, keep incrementing at interval (\"spinning up\")\n\n\n    timeoutRef.current = setTimeout(function () {\n      setRunOnce(false);\n      setIsSpinning(true);\n      setAction(\"increment\");\n    }, CONTINUOUS_CHANGE_DELAY);\n  }, [increment, runOnce]); // Function to activate the spinning and increment the value\n\n  var down = useCallback(function () {\n    // decrement the first fime\n    if (runOnce) {\n      decrement();\n    } // after a delay, keep decrementing at interval (\"spinning down\")\n\n\n    timeoutRef.current = setTimeout(function () {\n      setRunOnce(false);\n      setIsSpinning(true);\n      setAction(\"decrement\");\n    }, CONTINUOUS_CHANGE_DELAY);\n  }, [decrement, runOnce]); // Function to stop spinng (useful for mouseup, keyup handlers)\n\n  var stop = useCallback(function () {\n    setRunOnce(true);\n    setIsSpinning(false);\n    removeTimeout();\n  }, []);\n  /**\n   * If the component unmounts while spinning,\n   * let's clear the timeout as well\n   */\n\n  useUnmountEffect(removeTimeout);\n  return {\n    up: up,\n    down: down,\n    stop: stop\n  };\n}\n\nvar FLOATING_POINT_REGEX = /^[Ee0-9+\\-.]$/;\n/**\n * Determine if a character is a DOM floating point character\n * @see https://www.w3.org/TR/2012/WD-html-markup-20120329/datatypes.html#common.data.float\n */\n\nfunction isFloatingPointNumericCharacter(character) {\n  return FLOATING_POINT_REGEX.test(character);\n}\n/**\n * Determine if the event is a valid numeric keyboard event.\n * We use this so we can prevent non-number characters in the input\n */\n\n\nfunction isValidNumericKeyboardEvent(event) {\n  if (event.key == null) return true;\n  var isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n\n  if (isModifierKey) {\n    return true;\n  }\n\n  var isSingleCharacterKey = event.key.length === 1;\n\n  if (!isSingleCharacterKey) {\n    return true;\n  }\n\n  return isFloatingPointNumericCharacter(event.key);\n}\n\nvar _excluded$1 = [\"focusInputOnChange\", \"clampValueOnBlur\", \"keepWithinRange\", \"min\", \"max\", \"step\", \"isReadOnly\", \"isDisabled\", \"isRequired\", \"getAriaValueText\", \"isInvalid\", \"pattern\", \"inputMode\", \"allowMouseWheel\", \"id\", \"onChange\", \"precision\", \"name\", \"aria-describedby\", \"aria-label\", \"aria-labelledby\", \"onFocus\", \"onBlur\"];\n\nvar sanitize = function sanitize(value) {\n  return value.split(\"\").filter(isFloatingPointNumericCharacter).join(\"\");\n};\n/**\n * React hook that implements the WAI-ARIA Spin Button widget\n * and used to create numeric input fields.\n *\n * It returns prop getters you can use to build your own\n * custom number inputs.\n *\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.1/#spinbutton\n * @see Docs     https://www.chakra-ui.com/useNumberInput\n * @see WHATWG   https://html.spec.whatwg.org/multipage/input.html#number-state-(type=number)\n */\n\n\nfunction useNumberInput(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      _props$focusInputOnCh = _props.focusInputOnChange,\n      focusInputOnChange = _props$focusInputOnCh === void 0 ? true : _props$focusInputOnCh,\n      _props$clampValueOnBl = _props.clampValueOnBlur,\n      clampValueOnBlur = _props$clampValueOnBl === void 0 ? true : _props$clampValueOnBl,\n      _props$keepWithinRang = _props.keepWithinRange,\n      keepWithinRange = _props$keepWithinRang === void 0 ? true : _props$keepWithinRang,\n      _props$min = _props.min,\n      min = _props$min === void 0 ? minSafeInteger : _props$min,\n      _props$max = _props.max,\n      max = _props$max === void 0 ? maxSafeInteger : _props$max,\n      _props$step = _props.step,\n      stepProp = _props$step === void 0 ? 1 : _props$step,\n      isReadOnly = _props.isReadOnly,\n      isDisabled = _props.isDisabled,\n      isRequired = _props.isRequired,\n      getAriaValueText = _props.getAriaValueText,\n      isInvalid = _props.isInvalid,\n      _props$pattern = _props.pattern,\n      pattern = _props$pattern === void 0 ? \"[0-9]*(.[0-9]+)?\" : _props$pattern,\n      _props$inputMode = _props.inputMode,\n      inputMode = _props$inputMode === void 0 ? \"decimal\" : _props$inputMode,\n      allowMouseWheel = _props.allowMouseWheel,\n      id = _props.id;\n  _props.onChange;\n  _props.precision;\n\n  var name = _props.name,\n      ariaDescBy = _props[\"aria-describedby\"],\n      ariaLabel = _props[\"aria-label\"],\n      ariaLabelledBy = _props[\"aria-labelledby\"],\n      onFocus = _props.onFocus,\n      onBlur = _props.onBlur,\n      htmlProps = _objectWithoutPropertiesLoose(_props, _excluded$1);\n\n  var onFocusProp = useCallbackRef(onFocus);\n  var onBlurProp = useCallbackRef(onBlur);\n  var getAriaValueTextProp = useCallbackRef(getAriaValueText);\n  /**\n   * Leverage the `useCounter` hook since it provides\n   * the functionality to `increment`, `decrement` and `update`\n   * counter values\n   */\n\n  var counter = useCounter(props);\n  var updateFn = counter.update,\n      incrementFn = counter.increment,\n      decrementFn = counter.decrement;\n  /**\n   * Keep track of the focused state of the input,\n   * so user can this to change the styles of the\n   * `spinners`, maybe :)\n   */\n\n  var _useBoolean = useBoolean(),\n      isFocused = _useBoolean[0],\n      setFocused = _useBoolean[1];\n\n  var inputRef = React.useRef(null);\n  /**\n   * Sync state with uncontrolled form libraries like `react-hook-form`.\n   */\n\n  useSafeLayoutEffect(function () {\n    if (!inputRef.current) return;\n    var notInSync = inputRef.current.value != counter.value;\n\n    if (notInSync) {\n      counter.setValue(sanitize(inputRef.current.value));\n    }\n  }, []);\n  var isInteractive = !(isReadOnly || isDisabled);\n  var increment = React.useCallback(function (step) {\n    if (step === void 0) {\n      step = stepProp;\n    }\n\n    if (isInteractive) {\n      incrementFn(step);\n    }\n  }, [incrementFn, isInteractive, stepProp]);\n  var decrement = React.useCallback(function (step) {\n    if (step === void 0) {\n      step = stepProp;\n    }\n\n    if (isInteractive) {\n      decrementFn(step);\n    }\n  }, [decrementFn, isInteractive, stepProp]);\n  /**\n   * Leverage the `useSpinner` hook to spin the input's value\n   * when long press on the up and down buttons.\n   *\n   * This leverages `setInterval` internally\n   */\n\n  var spinner = useSpinner(increment, decrement);\n  /**\n   * The `onChange` handler filters out any character typed\n   * that isn't floating point compatible.\n   */\n\n  var onChange = React.useCallback(function (event) {\n    updateFn(sanitize(event.target.value));\n  }, [updateFn]);\n  var onKeyDown = React.useCallback(function (event) {\n    /**\n     * only allow valid numeric keys\n     */\n    if (!isValidNumericKeyboardEvent(event)) {\n      event.preventDefault();\n    }\n    /**\n     * Keyboard Accessibility\n     *\n     * We want to increase or decrease the input's value\n     * based on if the user the arrow keys.\n     *\n     * @see https://www.w3.org/TR/wai-aria-practices-1.1/#keyboard-interaction-17\n     */\n\n\n    var stepFactor = getStepFactor(event) * stepProp;\n    var eventKey = normalizeEventKey(event);\n    var keyMap = {\n      ArrowUp: function ArrowUp() {\n        return increment(stepFactor);\n      },\n      ArrowDown: function ArrowDown() {\n        return decrement(stepFactor);\n      },\n      Home: function Home() {\n        return updateFn(min);\n      },\n      End: function End() {\n        return updateFn(max);\n      }\n    };\n    var action = keyMap[eventKey];\n\n    if (action) {\n      event.preventDefault();\n      action(event);\n    }\n  }, [updateFn, decrement, increment, max, min, stepProp]);\n\n  var getStepFactor = function getStepFactor(event) {\n    var ratio = 1;\n\n    if (event.metaKey || event.ctrlKey) {\n      ratio = 0.1;\n    }\n\n    if (event.shiftKey) {\n      ratio = 10;\n    }\n\n    return ratio;\n  };\n  /**\n   * If user would like to use a human-readable representation\n   * of the value, rather than the value itself they can pass `getAriaValueText`\n   *\n   * @see https://www.w3.org/TR/wai-aria-practices-1.1/#wai-aria-roles-states-and-properties-18\n   * @see https://www.w3.org/TR/wai-aria-1.1/#aria-valuetext\n   */\n\n\n  var ariaValueText = React.useMemo(function () {\n    var text = getAriaValueTextProp == null ? void 0 : getAriaValueTextProp(counter.value);\n\n    if (!isNull(text)) {\n      return text;\n    }\n\n    var defaultText = counter.value.toString(); // empty string is an invalid ARIA attribute value\n\n    return !defaultText ? undefined : defaultText;\n  }, [counter.value, getAriaValueTextProp]);\n  /**\n   * Function that clamps the input's value on blur\n   */\n\n  var validateAndClamp = React.useCallback(function () {\n    var next = counter.value;\n    if (next === \"\") return;\n\n    if (counter.valueAsNumber < min) {\n      next = min;\n    }\n\n    if (counter.valueAsNumber > max) {\n      next = max;\n    }\n    /**\n     * `counter.cast` does 2 things:\n     *\n     * - sanitize the value by using parseFloat and some Regex\n     * - used to round value to computed precision or decimal points\n     */\n\n\n    counter.cast(next);\n  }, [counter, max, min]);\n  var onInputBlur = React.useCallback(function () {\n    setFocused.off();\n\n    if (clampValueOnBlur) {\n      validateAndClamp();\n    }\n  }, [clampValueOnBlur, setFocused, validateAndClamp]);\n  var focusInput = React.useCallback(function () {\n    if (focusInputOnChange) {\n      focus(inputRef.current, {\n        nextTick: true\n      });\n    }\n  }, [focusInputOnChange]);\n  var spinUp = React.useCallback(function (event) {\n    event.preventDefault();\n    spinner.up();\n    focusInput();\n  }, [focusInput, spinner]);\n  var spinDown = React.useCallback(function (event) {\n    event.preventDefault();\n    spinner.down();\n    focusInput();\n  }, [focusInput, spinner]);\n  var pointerDown = isBrowser && !!document.documentElement.ontouchstart ? \"onTouchStart\" : \"onMouseDown\";\n  useEventListener(\"wheel\", function (event) {\n    var isInputFocused = document.activeElement === inputRef.current;\n    if (!allowMouseWheel || !isInputFocused) return;\n    event.preventDefault();\n    var stepFactor = getStepFactor(event) * stepProp;\n    var direction = Math.sign(event.deltaY);\n\n    if (direction === -1) {\n      increment(stepFactor);\n    } else if (direction === 1) {\n      decrement(stepFactor);\n    }\n  }, inputRef.current, {\n    passive: false\n  });\n  var getIncrementButtonProps = React.useCallback(function (props, ref) {\n    var _extends2;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    var disabled = isDisabled || keepWithinRange && counter.isAtMax;\n    return _extends({}, props, (_extends2 = {\n      ref: ref,\n      role: \"button\",\n      tabIndex: -1\n    }, _extends2[pointerDown] = callAllHandlers(props[pointerDown], spinUp), _extends2.onMouseUp = callAllHandlers(props.onMouseUp, spinner.stop), _extends2.onMouseLeave = callAllHandlers(props.onMouseUp, spinner.stop), _extends2.onTouchEnd = callAllHandlers(props.onTouchEnd, spinner.stop), _extends2.disabled = disabled, _extends2[\"aria-disabled\"] = ariaAttr(disabled), _extends2));\n  }, [pointerDown, counter.isAtMax, keepWithinRange, spinUp, spinner.stop, isDisabled]);\n  var getDecrementButtonProps = React.useCallback(function (props, ref) {\n    var _extends3;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    var disabled = isDisabled || keepWithinRange && counter.isAtMin;\n    return _extends({}, props, (_extends3 = {\n      ref: ref,\n      role: \"button\",\n      tabIndex: -1\n    }, _extends3[pointerDown] = callAllHandlers(props[pointerDown], spinDown), _extends3.onMouseLeave = callAllHandlers(props.onMouseLeave, spinner.stop), _extends3.onMouseUp = callAllHandlers(props.onMouseUp, spinner.stop), _extends3.onTouchEnd = callAllHandlers(props.onTouchEnd, spinner.stop), _extends3.disabled = disabled, _extends3[\"aria-disabled\"] = ariaAttr(disabled), _extends3));\n  }, [pointerDown, counter.isAtMin, keepWithinRange, spinDown, spinner.stop, isDisabled]);\n  var getInputProps = React.useCallback(function (props, ref) {\n    var _props$readOnly, _props$readOnly2, _props$required, _props$required2;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({\n      name: name,\n      inputMode: inputMode,\n      type: \"text\",\n      pattern: pattern,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-label\": ariaLabel,\n      \"aria-describedby\": ariaDescBy,\n      id: id,\n      disabled: isDisabled\n    }, props, {\n      readOnly: (_props$readOnly = props.readOnly) != null ? _props$readOnly : isReadOnly,\n      \"aria-readonly\": (_props$readOnly2 = props.readOnly) != null ? _props$readOnly2 : isReadOnly,\n      \"aria-required\": (_props$required = props.required) != null ? _props$required : isRequired,\n      required: (_props$required2 = props.required) != null ? _props$required2 : isRequired,\n      ref: mergeRefs(inputRef, ref),\n      value: counter.value,\n      role: \"spinbutton\",\n      \"aria-valuemin\": min,\n      \"aria-valuemax\": max,\n      \"aria-valuenow\": Number.isNaN(counter.valueAsNumber) ? undefined : counter.valueAsNumber,\n      \"aria-invalid\": ariaAttr(isInvalid != null ? isInvalid : counter.isOutOfRange),\n      \"aria-valuetext\": ariaValueText,\n      autoComplete: \"off\",\n      autoCorrect: \"off\",\n      onChange: callAllHandlers(props.onChange, onChange),\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n      onFocus: callAllHandlers(props.onFocus, onFocusProp, setFocused.on),\n      onBlur: callAllHandlers(props.onBlur, onBlurProp, onInputBlur)\n    });\n  }, [name, inputMode, pattern, ariaLabelledBy, ariaLabel, ariaDescBy, id, isDisabled, isRequired, isReadOnly, isInvalid, counter.value, counter.valueAsNumber, counter.isOutOfRange, min, max, ariaValueText, onChange, onKeyDown, onFocusProp, setFocused.on, onBlurProp, onInputBlur]);\n  return {\n    value: counter.value,\n    valueAsNumber: counter.valueAsNumber,\n    isFocused: isFocused,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly,\n    getIncrementButtonProps: getIncrementButtonProps,\n    getDecrementButtonProps: getDecrementButtonProps,\n    getInputProps: getInputProps,\n    htmlProps: htmlProps\n  };\n}\n\nvar _excluded = [\"htmlProps\"];\n/**\n * React context used to communicate between components\n */\n\nvar _createContext = createContext({\n  name: \"NumberInputContext\",\n  errorMessage: \"useNumberInputContext: `context` is undefined. Seems you forgot to wrap number-input's components within <NumberInput />\"\n}),\n    NumberInputProvider = _createContext[0],\n    useNumberInputContext = _createContext[1];\n/**\n * NumberInput\n *\n * React component that provides context and logic to all\n * number input sub-components.\n *\n * It renders a `div` by default.\n *\n * @see Docs http://chakra-ui.com/numberinput\n */\n\n\nvar NumberInput = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"NumberInput\", props);\n  var ownProps = omitThemingProps(props);\n  var controlProps = useFormControlProps(ownProps);\n\n  var _useNumberInput = useNumberInput(controlProps),\n      htmlProps = _useNumberInput.htmlProps,\n      context = _objectWithoutPropertiesLoose(_useNumberInput, _excluded);\n\n  var ctx = React.useMemo(function () {\n    return context;\n  }, [context]);\n  return /*#__PURE__*/React.createElement(NumberInputProvider, {\n    value: ctx\n  }, /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({}, htmlProps, {\n    ref: ref,\n    className: cx(\"chakra-numberinput\", props.className),\n    __css: _extends({\n      position: \"relative\",\n      zIndex: 0\n    }, styles.root)\n  }))));\n});\n\nif (__DEV__) {\n  NumberInput.displayName = \"NumberInput\";\n}\n/**\n * NumberInputStepper\n *\n * React component used to group the increment and decrement\n * button spinners.\n *\n * It renders a `div` by default.\n *\n * @see Docs http://chakra-ui.com/components/number-input\n */\n\n\nvar NumberInputStepper = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    \"aria-hidden\": true,\n    ref: ref\n  }, props, {\n    __css: _extends({\n      display: \"flex\",\n      flexDirection: \"column\",\n      position: \"absolute\",\n      top: \"0\",\n      insetEnd: \"0px\",\n      margin: \"1px\",\n      height: \"calc(100% - 2px)\",\n      zIndex: 1\n    }, styles.stepperGroup)\n  }));\n});\n\nif (__DEV__) {\n  NumberInputStepper.displayName = \"NumberInputStepper\";\n}\n/**\n * NumberInputField\n *\n * React component that represents the actual `input` field\n * where users can type to edit numeric values.\n *\n * It renders an `input` by default and ensures only numeric\n * values can be typed.\n *\n * @see Docs http://chakra-ui.com/numberinput\n */\n\n\nvar NumberInputField = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _useNumberInputContex = useNumberInputContext(),\n      getInputProps = _useNumberInputContex.getInputProps;\n\n  var input = getInputProps(props, ref);\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.input, _extends({}, input, {\n    className: cx(\"chakra-numberinput__field\", props.className),\n    __css: _extends({\n      width: \"100%\"\n    }, styles.field)\n  }));\n});\n\nif (__DEV__) {\n  NumberInputField.displayName = \"NumberInputField\";\n}\n\nvar StyledStepper = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flex: 1,\n    transitionProperty: \"common\",\n    transitionDuration: \"normal\",\n    userSelect: \"none\",\n    cursor: \"pointer\",\n    lineHeight: \"normal\"\n  }\n});\n/**\n * NumberDecrementStepper\n *\n * React component used to decrement the number input's value\n *\n * It renders a `div` with `role=button` by default\n */\n\nvar NumberDecrementStepper = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _props$children;\n\n  var styles = useStyles();\n\n  var _useNumberInputContex2 = useNumberInputContext(),\n      getDecrementButtonProps = _useNumberInputContex2.getDecrementButtonProps;\n\n  var decrement = getDecrementButtonProps(props, ref);\n  return /*#__PURE__*/React.createElement(StyledStepper, _extends({}, decrement, {\n    __css: styles.stepper\n  }), (_props$children = props.children) != null ? _props$children : /*#__PURE__*/React.createElement(TriangleDownIcon, null));\n});\n\nif (__DEV__) {\n  NumberDecrementStepper.displayName = \"NumberDecrementStepper\";\n}\n/**\n * NumberIncrementStepper\n *\n * React component used to increment the number input's value\n *\n * It renders a `div` with `role=button` by default\n */\n\n\nvar NumberIncrementStepper = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _props$children2;\n\n  var _useNumberInputContex3 = useNumberInputContext(),\n      getIncrementButtonProps = _useNumberInputContex3.getIncrementButtonProps;\n\n  var increment = getIncrementButtonProps(props, ref);\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(StyledStepper, _extends({}, increment, {\n    __css: styles.stepper\n  }), (_props$children2 = props.children) != null ? _props$children2 : /*#__PURE__*/React.createElement(TriangleUpIcon, null));\n});\n\nif (__DEV__) {\n  NumberIncrementStepper.displayName = \"NumberIncrementStepper\";\n}\n\nexport { NumberDecrementStepper, NumberIncrementStepper, NumberInput, NumberInputField, NumberInputStepper, StyledStepper, useNumberInput };","map":{"version":3,"sources":["/Users/kendrawing/Documents/Coding Projects:Practice/1 Repos:Deployed/React-Ecommerce-Site/node_modules/@chakra-ui/number-input/dist/chakra-ui-number-input.esm.js"],"names":["useFormControlProps","forwardRef","useMultiStyleConfig","omitThemingProps","StylesProvider","chakra","useStyles","normalizeEventKey","isNull","focus","isBrowser","callAllHandlers","ariaAttr","minSafeInteger","maxSafeInteger","cx","__DEV__","mergeRefs","createContext","React","useState","useRef","useCallback","Icon","useCounter","useInterval","useUnmountEffect","useCallbackRef","useBoolean","useSafeLayoutEffect","useEventListener","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","TriangleDownIcon","props","createElement","viewBox","fill","d","TriangleUpIcon","CONTINUOUS_CHANGE_INTERVAL","CONTINUOUS_CHANGE_DELAY","useSpinner","increment","decrement","_useState","isSpinning","setIsSpinning","_useState2","action","setAction","_useState3","runOnce","setRunOnce","timeoutRef","removeTimeout","clearTimeout","current","up","setTimeout","down","stop","FLOATING_POINT_REGEX","isFloatingPointNumericCharacter","character","test","isValidNumericKeyboardEvent","event","isModifierKey","ctrlKey","altKey","metaKey","isSingleCharacterKey","_excluded$1","sanitize","value","split","filter","join","useNumberInput","_props","_props$focusInputOnCh","focusInputOnChange","_props$clampValueOnBl","clampValueOnBlur","_props$keepWithinRang","keepWithinRange","_props$min","min","_props$max","max","_props$step","step","stepProp","isReadOnly","isDisabled","isRequired","getAriaValueText","isInvalid","_props$pattern","pattern","_props$inputMode","inputMode","allowMouseWheel","id","onChange","precision","name","ariaDescBy","ariaLabel","ariaLabelledBy","onFocus","onBlur","htmlProps","onFocusProp","onBlurProp","getAriaValueTextProp","counter","updateFn","update","incrementFn","decrementFn","_useBoolean","isFocused","setFocused","inputRef","notInSync","setValue","isInteractive","spinner","onKeyDown","preventDefault","stepFactor","getStepFactor","eventKey","keyMap","ArrowUp","ArrowDown","Home","End","ratio","shiftKey","ariaValueText","useMemo","text","defaultText","toString","undefined","validateAndClamp","next","valueAsNumber","cast","onInputBlur","off","focusInput","nextTick","spinUp","spinDown","pointerDown","document","documentElement","ontouchstart","isInputFocused","activeElement","direction","Math","sign","deltaY","passive","getIncrementButtonProps","ref","_extends2","disabled","isAtMax","role","tabIndex","onMouseUp","onMouseLeave","onTouchEnd","getDecrementButtonProps","_extends3","isAtMin","getInputProps","_props$readOnly","_props$readOnly2","_props$required","_props$required2","type","readOnly","required","Number","isNaN","isOutOfRange","autoComplete","autoCorrect","on","_excluded","_createContext","errorMessage","NumberInputProvider","useNumberInputContext","NumberInput","styles","ownProps","controlProps","_useNumberInput","context","ctx","div","className","__css","position","zIndex","root","displayName","NumberInputStepper","display","flexDirection","top","insetEnd","margin","height","stepperGroup","NumberInputField","_useNumberInputContex","input","width","field","StyledStepper","baseStyle","justifyContent","alignItems","flex","transitionProperty","transitionDuration","userSelect","cursor","lineHeight","NumberDecrementStepper","_props$children","_useNumberInputContex2","stepper","children","NumberIncrementStepper","_props$children2","_useNumberInputContex3"],"mappings":"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","sourcesContent":["import { useFormControlProps } from '@chakra-ui/form-control';\nimport { forwardRef, useMultiStyleConfig, omitThemingProps, StylesProvider, chakra, useStyles } from '@chakra-ui/system';\nimport { normalizeEventKey, isNull, focus, isBrowser, callAllHandlers, ariaAttr, minSafeInteger, maxSafeInteger, cx, __DEV__ } from '@chakra-ui/utils';\nimport { mergeRefs, createContext } from '@chakra-ui/react-utils';\nimport * as React from 'react';\nimport { useState, useRef, useCallback } from 'react';\nimport { Icon } from '@chakra-ui/icon';\nimport { useCounter } from '@chakra-ui/counter';\nimport { useInterval, useUnmountEffect, useCallbackRef, useBoolean, useSafeLayoutEffect, useEventListener } from '@chakra-ui/hooks';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar TriangleDownIcon = function TriangleDownIcon(props) {\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    viewBox: \"0 0 24 24\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M21,5H3C2.621,5,2.275,5.214,2.105,5.553C1.937,5.892,1.973,6.297,2.2,6.6l9,12 c0.188,0.252,0.485,0.4,0.8,0.4s0.611-0.148,0.8-0.4l9-12c0.228-0.303,0.264-0.708,0.095-1.047C21.725,5.214,21.379,5,21,5z\"\n  }));\n};\nvar TriangleUpIcon = function TriangleUpIcon(props) {\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    viewBox: \"0 0 24 24\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M12.8,5.4c-0.377-0.504-1.223-0.504-1.6,0l-9,12c-0.228,0.303-0.264,0.708-0.095,1.047 C2.275,18.786,2.621,19,3,19h18c0.379,0,0.725-0.214,0.895-0.553c0.169-0.339,0.133-0.744-0.095-1.047L12.8,5.4z\"\n  }));\n};\n\n/**\n * When click and hold on a button - the speed of auto changing the value.\n */\n\nvar CONTINUOUS_CHANGE_INTERVAL = 50;\n/**\n * When click and hold on a button - the delay before auto changing the value.\n */\n\nvar CONTINUOUS_CHANGE_DELAY = 300;\n\n/**\n * React hook used in the number input to spin its\n * value on long press of the spin buttons\n *\n * @param increment the function to increment\n * @param decrement the function to decrement\n */\nfunction useSpinner(increment, decrement) {\n  /**\n   * To keep incrementing/decrementing on press, we call that `spinning`\n   */\n  var _useState = useState(false),\n      isSpinning = _useState[0],\n      setIsSpinning = _useState[1]; // This state keeps track of the action (\"increment\" or \"decrement\")\n\n\n  var _useState2 = useState(null),\n      action = _useState2[0],\n      setAction = _useState2[1]; // To increment the value the first time you mousedown, we call that `runOnce`\n\n\n  var _useState3 = useState(true),\n      runOnce = _useState3[0],\n      setRunOnce = _useState3[1]; // Store the timeout instance id in a ref, so we can clear the timeout later\n\n\n  var timeoutRef = useRef(null); // Clears the timeout from memory\n\n  var removeTimeout = function removeTimeout() {\n    return clearTimeout(timeoutRef.current);\n  };\n  /**\n   * useInterval hook provides a performant way to\n   * update the state value at specific interval\n   */\n\n\n  useInterval(function () {\n    if (action === \"increment\") {\n      increment();\n    }\n\n    if (action === \"decrement\") {\n      decrement();\n    }\n  }, isSpinning ? CONTINUOUS_CHANGE_INTERVAL : null); // Function to activate the spinning and increment the value\n\n  var up = useCallback(function () {\n    // increment the first fime\n    if (runOnce) {\n      increment();\n    } // after a delay, keep incrementing at interval (\"spinning up\")\n\n\n    timeoutRef.current = setTimeout(function () {\n      setRunOnce(false);\n      setIsSpinning(true);\n      setAction(\"increment\");\n    }, CONTINUOUS_CHANGE_DELAY);\n  }, [increment, runOnce]); // Function to activate the spinning and increment the value\n\n  var down = useCallback(function () {\n    // decrement the first fime\n    if (runOnce) {\n      decrement();\n    } // after a delay, keep decrementing at interval (\"spinning down\")\n\n\n    timeoutRef.current = setTimeout(function () {\n      setRunOnce(false);\n      setIsSpinning(true);\n      setAction(\"decrement\");\n    }, CONTINUOUS_CHANGE_DELAY);\n  }, [decrement, runOnce]); // Function to stop spinng (useful for mouseup, keyup handlers)\n\n  var stop = useCallback(function () {\n    setRunOnce(true);\n    setIsSpinning(false);\n    removeTimeout();\n  }, []);\n  /**\n   * If the component unmounts while spinning,\n   * let's clear the timeout as well\n   */\n\n  useUnmountEffect(removeTimeout);\n  return {\n    up: up,\n    down: down,\n    stop: stop\n  };\n}\n\nvar FLOATING_POINT_REGEX = /^[Ee0-9+\\-.]$/;\n/**\n * Determine if a character is a DOM floating point character\n * @see https://www.w3.org/TR/2012/WD-html-markup-20120329/datatypes.html#common.data.float\n */\n\nfunction isFloatingPointNumericCharacter(character) {\n  return FLOATING_POINT_REGEX.test(character);\n}\n/**\n * Determine if the event is a valid numeric keyboard event.\n * We use this so we can prevent non-number characters in the input\n */\n\nfunction isValidNumericKeyboardEvent(event) {\n  if (event.key == null) return true;\n  var isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n\n  if (isModifierKey) {\n    return true;\n  }\n\n  var isSingleCharacterKey = event.key.length === 1;\n\n  if (!isSingleCharacterKey) {\n    return true;\n  }\n\n  return isFloatingPointNumericCharacter(event.key);\n}\n\nvar _excluded$1 = [\"focusInputOnChange\", \"clampValueOnBlur\", \"keepWithinRange\", \"min\", \"max\", \"step\", \"isReadOnly\", \"isDisabled\", \"isRequired\", \"getAriaValueText\", \"isInvalid\", \"pattern\", \"inputMode\", \"allowMouseWheel\", \"id\", \"onChange\", \"precision\", \"name\", \"aria-describedby\", \"aria-label\", \"aria-labelledby\", \"onFocus\", \"onBlur\"];\n\nvar sanitize = function sanitize(value) {\n  return value.split(\"\").filter(isFloatingPointNumericCharacter).join(\"\");\n};\n/**\n * React hook that implements the WAI-ARIA Spin Button widget\n * and used to create numeric input fields.\n *\n * It returns prop getters you can use to build your own\n * custom number inputs.\n *\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.1/#spinbutton\n * @see Docs     https://www.chakra-ui.com/useNumberInput\n * @see WHATWG   https://html.spec.whatwg.org/multipage/input.html#number-state-(type=number)\n */\n\n\nfunction useNumberInput(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      _props$focusInputOnCh = _props.focusInputOnChange,\n      focusInputOnChange = _props$focusInputOnCh === void 0 ? true : _props$focusInputOnCh,\n      _props$clampValueOnBl = _props.clampValueOnBlur,\n      clampValueOnBlur = _props$clampValueOnBl === void 0 ? true : _props$clampValueOnBl,\n      _props$keepWithinRang = _props.keepWithinRange,\n      keepWithinRange = _props$keepWithinRang === void 0 ? true : _props$keepWithinRang,\n      _props$min = _props.min,\n      min = _props$min === void 0 ? minSafeInteger : _props$min,\n      _props$max = _props.max,\n      max = _props$max === void 0 ? maxSafeInteger : _props$max,\n      _props$step = _props.step,\n      stepProp = _props$step === void 0 ? 1 : _props$step,\n      isReadOnly = _props.isReadOnly,\n      isDisabled = _props.isDisabled,\n      isRequired = _props.isRequired,\n      getAriaValueText = _props.getAriaValueText,\n      isInvalid = _props.isInvalid,\n      _props$pattern = _props.pattern,\n      pattern = _props$pattern === void 0 ? \"[0-9]*(.[0-9]+)?\" : _props$pattern,\n      _props$inputMode = _props.inputMode,\n      inputMode = _props$inputMode === void 0 ? \"decimal\" : _props$inputMode,\n      allowMouseWheel = _props.allowMouseWheel,\n      id = _props.id;\n      _props.onChange;\n      _props.precision;\n      var name = _props.name,\n      ariaDescBy = _props[\"aria-describedby\"],\n      ariaLabel = _props[\"aria-label\"],\n      ariaLabelledBy = _props[\"aria-labelledby\"],\n      onFocus = _props.onFocus,\n      onBlur = _props.onBlur,\n      htmlProps = _objectWithoutPropertiesLoose(_props, _excluded$1);\n\n  var onFocusProp = useCallbackRef(onFocus);\n  var onBlurProp = useCallbackRef(onBlur);\n  var getAriaValueTextProp = useCallbackRef(getAriaValueText);\n  /**\n   * Leverage the `useCounter` hook since it provides\n   * the functionality to `increment`, `decrement` and `update`\n   * counter values\n   */\n\n  var counter = useCounter(props);\n  var updateFn = counter.update,\n      incrementFn = counter.increment,\n      decrementFn = counter.decrement;\n  /**\n   * Keep track of the focused state of the input,\n   * so user can this to change the styles of the\n   * `spinners`, maybe :)\n   */\n\n  var _useBoolean = useBoolean(),\n      isFocused = _useBoolean[0],\n      setFocused = _useBoolean[1];\n\n  var inputRef = React.useRef(null);\n  /**\n   * Sync state with uncontrolled form libraries like `react-hook-form`.\n   */\n\n  useSafeLayoutEffect(function () {\n    if (!inputRef.current) return;\n    var notInSync = inputRef.current.value != counter.value;\n\n    if (notInSync) {\n      counter.setValue(sanitize(inputRef.current.value));\n    }\n  }, []);\n  var isInteractive = !(isReadOnly || isDisabled);\n  var increment = React.useCallback(function (step) {\n    if (step === void 0) {\n      step = stepProp;\n    }\n\n    if (isInteractive) {\n      incrementFn(step);\n    }\n  }, [incrementFn, isInteractive, stepProp]);\n  var decrement = React.useCallback(function (step) {\n    if (step === void 0) {\n      step = stepProp;\n    }\n\n    if (isInteractive) {\n      decrementFn(step);\n    }\n  }, [decrementFn, isInteractive, stepProp]);\n  /**\n   * Leverage the `useSpinner` hook to spin the input's value\n   * when long press on the up and down buttons.\n   *\n   * This leverages `setInterval` internally\n   */\n\n  var spinner = useSpinner(increment, decrement);\n  /**\n   * The `onChange` handler filters out any character typed\n   * that isn't floating point compatible.\n   */\n\n  var onChange = React.useCallback(function (event) {\n    updateFn(sanitize(event.target.value));\n  }, [updateFn]);\n  var onKeyDown = React.useCallback(function (event) {\n    /**\n     * only allow valid numeric keys\n     */\n    if (!isValidNumericKeyboardEvent(event)) {\n      event.preventDefault();\n    }\n    /**\n     * Keyboard Accessibility\n     *\n     * We want to increase or decrease the input's value\n     * based on if the user the arrow keys.\n     *\n     * @see https://www.w3.org/TR/wai-aria-practices-1.1/#keyboard-interaction-17\n     */\n\n\n    var stepFactor = getStepFactor(event) * stepProp;\n    var eventKey = normalizeEventKey(event);\n    var keyMap = {\n      ArrowUp: function ArrowUp() {\n        return increment(stepFactor);\n      },\n      ArrowDown: function ArrowDown() {\n        return decrement(stepFactor);\n      },\n      Home: function Home() {\n        return updateFn(min);\n      },\n      End: function End() {\n        return updateFn(max);\n      }\n    };\n    var action = keyMap[eventKey];\n\n    if (action) {\n      event.preventDefault();\n      action(event);\n    }\n  }, [updateFn, decrement, increment, max, min, stepProp]);\n\n  var getStepFactor = function getStepFactor(event) {\n    var ratio = 1;\n\n    if (event.metaKey || event.ctrlKey) {\n      ratio = 0.1;\n    }\n\n    if (event.shiftKey) {\n      ratio = 10;\n    }\n\n    return ratio;\n  };\n  /**\n   * If user would like to use a human-readable representation\n   * of the value, rather than the value itself they can pass `getAriaValueText`\n   *\n   * @see https://www.w3.org/TR/wai-aria-practices-1.1/#wai-aria-roles-states-and-properties-18\n   * @see https://www.w3.org/TR/wai-aria-1.1/#aria-valuetext\n   */\n\n\n  var ariaValueText = React.useMemo(function () {\n    var text = getAriaValueTextProp == null ? void 0 : getAriaValueTextProp(counter.value);\n\n    if (!isNull(text)) {\n      return text;\n    }\n\n    var defaultText = counter.value.toString(); // empty string is an invalid ARIA attribute value\n\n    return !defaultText ? undefined : defaultText;\n  }, [counter.value, getAriaValueTextProp]);\n  /**\n   * Function that clamps the input's value on blur\n   */\n\n  var validateAndClamp = React.useCallback(function () {\n    var next = counter.value;\n    if (next === \"\") return;\n\n    if (counter.valueAsNumber < min) {\n      next = min;\n    }\n\n    if (counter.valueAsNumber > max) {\n      next = max;\n    }\n    /**\n     * `counter.cast` does 2 things:\n     *\n     * - sanitize the value by using parseFloat and some Regex\n     * - used to round value to computed precision or decimal points\n     */\n\n\n    counter.cast(next);\n  }, [counter, max, min]);\n  var onInputBlur = React.useCallback(function () {\n    setFocused.off();\n\n    if (clampValueOnBlur) {\n      validateAndClamp();\n    }\n  }, [clampValueOnBlur, setFocused, validateAndClamp]);\n  var focusInput = React.useCallback(function () {\n    if (focusInputOnChange) {\n      focus(inputRef.current, {\n        nextTick: true\n      });\n    }\n  }, [focusInputOnChange]);\n  var spinUp = React.useCallback(function (event) {\n    event.preventDefault();\n    spinner.up();\n    focusInput();\n  }, [focusInput, spinner]);\n  var spinDown = React.useCallback(function (event) {\n    event.preventDefault();\n    spinner.down();\n    focusInput();\n  }, [focusInput, spinner]);\n  var pointerDown = isBrowser && !!document.documentElement.ontouchstart ? \"onTouchStart\" : \"onMouseDown\";\n  useEventListener(\"wheel\", function (event) {\n    var isInputFocused = document.activeElement === inputRef.current;\n    if (!allowMouseWheel || !isInputFocused) return;\n    event.preventDefault();\n    var stepFactor = getStepFactor(event) * stepProp;\n    var direction = Math.sign(event.deltaY);\n\n    if (direction === -1) {\n      increment(stepFactor);\n    } else if (direction === 1) {\n      decrement(stepFactor);\n    }\n  }, inputRef.current, {\n    passive: false\n  });\n  var getIncrementButtonProps = React.useCallback(function (props, ref) {\n    var _extends2;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    var disabled = isDisabled || keepWithinRange && counter.isAtMax;\n    return _extends({}, props, (_extends2 = {\n      ref: ref,\n      role: \"button\",\n      tabIndex: -1\n    }, _extends2[pointerDown] = callAllHandlers(props[pointerDown], spinUp), _extends2.onMouseUp = callAllHandlers(props.onMouseUp, spinner.stop), _extends2.onMouseLeave = callAllHandlers(props.onMouseUp, spinner.stop), _extends2.onTouchEnd = callAllHandlers(props.onTouchEnd, spinner.stop), _extends2.disabled = disabled, _extends2[\"aria-disabled\"] = ariaAttr(disabled), _extends2));\n  }, [pointerDown, counter.isAtMax, keepWithinRange, spinUp, spinner.stop, isDisabled]);\n  var getDecrementButtonProps = React.useCallback(function (props, ref) {\n    var _extends3;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    var disabled = isDisabled || keepWithinRange && counter.isAtMin;\n    return _extends({}, props, (_extends3 = {\n      ref: ref,\n      role: \"button\",\n      tabIndex: -1\n    }, _extends3[pointerDown] = callAllHandlers(props[pointerDown], spinDown), _extends3.onMouseLeave = callAllHandlers(props.onMouseLeave, spinner.stop), _extends3.onMouseUp = callAllHandlers(props.onMouseUp, spinner.stop), _extends3.onTouchEnd = callAllHandlers(props.onTouchEnd, spinner.stop), _extends3.disabled = disabled, _extends3[\"aria-disabled\"] = ariaAttr(disabled), _extends3));\n  }, [pointerDown, counter.isAtMin, keepWithinRange, spinDown, spinner.stop, isDisabled]);\n  var getInputProps = React.useCallback(function (props, ref) {\n    var _props$readOnly, _props$readOnly2, _props$required, _props$required2;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({\n      name: name,\n      inputMode: inputMode,\n      type: \"text\",\n      pattern: pattern,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-label\": ariaLabel,\n      \"aria-describedby\": ariaDescBy,\n      id: id,\n      disabled: isDisabled\n    }, props, {\n      readOnly: (_props$readOnly = props.readOnly) != null ? _props$readOnly : isReadOnly,\n      \"aria-readonly\": (_props$readOnly2 = props.readOnly) != null ? _props$readOnly2 : isReadOnly,\n      \"aria-required\": (_props$required = props.required) != null ? _props$required : isRequired,\n      required: (_props$required2 = props.required) != null ? _props$required2 : isRequired,\n      ref: mergeRefs(inputRef, ref),\n      value: counter.value,\n      role: \"spinbutton\",\n      \"aria-valuemin\": min,\n      \"aria-valuemax\": max,\n      \"aria-valuenow\": Number.isNaN(counter.valueAsNumber) ? undefined : counter.valueAsNumber,\n      \"aria-invalid\": ariaAttr(isInvalid != null ? isInvalid : counter.isOutOfRange),\n      \"aria-valuetext\": ariaValueText,\n      autoComplete: \"off\",\n      autoCorrect: \"off\",\n      onChange: callAllHandlers(props.onChange, onChange),\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n      onFocus: callAllHandlers(props.onFocus, onFocusProp, setFocused.on),\n      onBlur: callAllHandlers(props.onBlur, onBlurProp, onInputBlur)\n    });\n  }, [name, inputMode, pattern, ariaLabelledBy, ariaLabel, ariaDescBy, id, isDisabled, isRequired, isReadOnly, isInvalid, counter.value, counter.valueAsNumber, counter.isOutOfRange, min, max, ariaValueText, onChange, onKeyDown, onFocusProp, setFocused.on, onBlurProp, onInputBlur]);\n  return {\n    value: counter.value,\n    valueAsNumber: counter.valueAsNumber,\n    isFocused: isFocused,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly,\n    getIncrementButtonProps: getIncrementButtonProps,\n    getDecrementButtonProps: getDecrementButtonProps,\n    getInputProps: getInputProps,\n    htmlProps: htmlProps\n  };\n}\n\nvar _excluded = [\"htmlProps\"];\n\n/**\n * React context used to communicate between components\n */\nvar _createContext = createContext({\n  name: \"NumberInputContext\",\n  errorMessage: \"useNumberInputContext: `context` is undefined. Seems you forgot to wrap number-input's components within <NumberInput />\"\n}),\n    NumberInputProvider = _createContext[0],\n    useNumberInputContext = _createContext[1];\n\n/**\n * NumberInput\n *\n * React component that provides context and logic to all\n * number input sub-components.\n *\n * It renders a `div` by default.\n *\n * @see Docs http://chakra-ui.com/numberinput\n */\nvar NumberInput = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"NumberInput\", props);\n  var ownProps = omitThemingProps(props);\n  var controlProps = useFormControlProps(ownProps);\n\n  var _useNumberInput = useNumberInput(controlProps),\n      htmlProps = _useNumberInput.htmlProps,\n      context = _objectWithoutPropertiesLoose(_useNumberInput, _excluded);\n\n  var ctx = React.useMemo(function () {\n    return context;\n  }, [context]);\n  return /*#__PURE__*/React.createElement(NumberInputProvider, {\n    value: ctx\n  }, /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({}, htmlProps, {\n    ref: ref,\n    className: cx(\"chakra-numberinput\", props.className),\n    __css: _extends({\n      position: \"relative\",\n      zIndex: 0\n    }, styles.root)\n  }))));\n});\n\nif (__DEV__) {\n  NumberInput.displayName = \"NumberInput\";\n}\n\n/**\n * NumberInputStepper\n *\n * React component used to group the increment and decrement\n * button spinners.\n *\n * It renders a `div` by default.\n *\n * @see Docs http://chakra-ui.com/components/number-input\n */\nvar NumberInputStepper = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    \"aria-hidden\": true,\n    ref: ref\n  }, props, {\n    __css: _extends({\n      display: \"flex\",\n      flexDirection: \"column\",\n      position: \"absolute\",\n      top: \"0\",\n      insetEnd: \"0px\",\n      margin: \"1px\",\n      height: \"calc(100% - 2px)\",\n      zIndex: 1\n    }, styles.stepperGroup)\n  }));\n});\n\nif (__DEV__) {\n  NumberInputStepper.displayName = \"NumberInputStepper\";\n}\n\n/**\n * NumberInputField\n *\n * React component that represents the actual `input` field\n * where users can type to edit numeric values.\n *\n * It renders an `input` by default and ensures only numeric\n * values can be typed.\n *\n * @see Docs http://chakra-ui.com/numberinput\n */\nvar NumberInputField = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _useNumberInputContex = useNumberInputContext(),\n      getInputProps = _useNumberInputContex.getInputProps;\n\n  var input = getInputProps(props, ref);\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.input, _extends({}, input, {\n    className: cx(\"chakra-numberinput__field\", props.className),\n    __css: _extends({\n      width: \"100%\"\n    }, styles.field)\n  }));\n});\n\nif (__DEV__) {\n  NumberInputField.displayName = \"NumberInputField\";\n}\n\nvar StyledStepper = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flex: 1,\n    transitionProperty: \"common\",\n    transitionDuration: \"normal\",\n    userSelect: \"none\",\n    cursor: \"pointer\",\n    lineHeight: \"normal\"\n  }\n});\n\n/**\n * NumberDecrementStepper\n *\n * React component used to decrement the number input's value\n *\n * It renders a `div` with `role=button` by default\n */\nvar NumberDecrementStepper = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _props$children;\n\n  var styles = useStyles();\n\n  var _useNumberInputContex2 = useNumberInputContext(),\n      getDecrementButtonProps = _useNumberInputContex2.getDecrementButtonProps;\n\n  var decrement = getDecrementButtonProps(props, ref);\n  return /*#__PURE__*/React.createElement(StyledStepper, _extends({}, decrement, {\n    __css: styles.stepper\n  }), (_props$children = props.children) != null ? _props$children : /*#__PURE__*/React.createElement(TriangleDownIcon, null));\n});\n\nif (__DEV__) {\n  NumberDecrementStepper.displayName = \"NumberDecrementStepper\";\n}\n\n/**\n * NumberIncrementStepper\n *\n * React component used to increment the number input's value\n *\n * It renders a `div` with `role=button` by default\n */\nvar NumberIncrementStepper = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _props$children2;\n\n  var _useNumberInputContex3 = useNumberInputContext(),\n      getIncrementButtonProps = _useNumberInputContex3.getIncrementButtonProps;\n\n  var increment = getIncrementButtonProps(props, ref);\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(StyledStepper, _extends({}, increment, {\n    __css: styles.stepper\n  }), (_props$children2 = props.children) != null ? _props$children2 : /*#__PURE__*/React.createElement(TriangleUpIcon, null));\n});\n\nif (__DEV__) {\n  NumberIncrementStepper.displayName = \"NumberIncrementStepper\";\n}\n\nexport { NumberDecrementStepper, NumberIncrementStepper, NumberInput, NumberInputField, NumberInputStepper, StyledStepper, useNumberInput };\n"]},"metadata":{},"sourceType":"module"}