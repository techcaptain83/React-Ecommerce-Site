{"ast":null,"code":"import { useCallbackRef, useControllableProp } from '@chakra-ui/hooks';\nimport { countDecimalPlaces, clampValue, toPrecision, minSafeInteger, maxSafeInteger } from '@chakra-ui/utils';\nimport { useState, useCallback } from 'react';\n\nfunction useCounter(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      onChange = _props.onChange,\n      precisionProp = _props.precision,\n      defaultValue = _props.defaultValue,\n      valueProp = _props.value,\n      _props$step = _props.step,\n      stepProp = _props$step === void 0 ? 1 : _props$step,\n      _props$min = _props.min,\n      min = _props$min === void 0 ? minSafeInteger : _props$min,\n      _props$max = _props.max,\n      max = _props$max === void 0 ? maxSafeInteger : _props$max,\n      _props$keepWithinRang = _props.keepWithinRange,\n      keepWithinRange = _props$keepWithinRang === void 0 ? true : _props$keepWithinRang;\n  var onChangeProp = useCallbackRef(onChange);\n\n  var _useState = useState(function () {\n    var _cast;\n\n    if (defaultValue == null) return \"\";\n    return (_cast = cast(defaultValue, stepProp, precisionProp)) != null ? _cast : \"\";\n  }),\n      valueState = _useState[0],\n      setValue = _useState[1];\n  /**\n   * Because the component that consumes this hook can be controlled or uncontrolled\n   * we'll keep track of that\n   */\n\n\n  var _useControllableProp = useControllableProp(valueProp, valueState),\n      isControlled = _useControllableProp[0],\n      value = _useControllableProp[1];\n\n  var decimalPlaces = getDecimalPlaces(parse(value), stepProp);\n  var precision = precisionProp != null ? precisionProp : decimalPlaces;\n  var update = useCallback(function (next) {\n    if (next === value) return;\n\n    if (!isControlled) {\n      setValue(next.toString());\n    }\n\n    onChangeProp == null ? void 0 : onChangeProp(next.toString(), parse(next));\n  }, [onChangeProp, isControlled, value]); // Function to clamp the value and round it to the precision\n\n  var clamp = useCallback(function (value) {\n    var nextValue = value;\n\n    if (keepWithinRange) {\n      nextValue = clampValue(nextValue, min, max);\n    }\n\n    return toPrecision(nextValue, precision);\n  }, [precision, keepWithinRange, max, min]);\n  var increment = useCallback(function (step) {\n    if (step === void 0) {\n      step = stepProp;\n    }\n\n    var next;\n    /**\n     * Let's follow the native browser behavior for\n     * scenarios where the input starts empty (\"\")\n     */\n\n    if (value === \"\") {\n      /**\n       * If `min` is set, native input, starts at the `min`.\n       * Else, it starts at `step`\n       */\n      next = parse(step);\n    } else {\n      next = parse(value) + step;\n    }\n\n    next = clamp(next);\n    update(next);\n  }, [clamp, stepProp, update, value]);\n  var decrement = useCallback(function (step) {\n    if (step === void 0) {\n      step = stepProp;\n    }\n\n    var next; // Same thing here. We'll follow native implementation\n\n    if (value === \"\") {\n      next = parse(-step);\n    } else {\n      next = parse(value) - step;\n    }\n\n    next = clamp(next);\n    update(next);\n  }, [clamp, stepProp, update, value]);\n  var reset = useCallback(function () {\n    var next;\n\n    if (defaultValue == null) {\n      next = \"\";\n    } else {\n      var _cast2;\n\n      next = (_cast2 = cast(defaultValue, stepProp, precisionProp)) != null ? _cast2 : min;\n    }\n\n    update(next);\n  }, [defaultValue, precisionProp, stepProp, update, min]);\n  var castValue = useCallback(function (value) {\n    var _cast3;\n\n    var nextValue = (_cast3 = cast(value, stepProp, precision)) != null ? _cast3 : min;\n    update(nextValue);\n  }, [precision, stepProp, update, min]);\n  var valueAsNumber = parse(value);\n  /**\n   * Common range checks\n   */\n\n  var isOutOfRange = valueAsNumber > max || valueAsNumber < min;\n  var isAtMax = valueAsNumber === max;\n  var isAtMin = valueAsNumber === min;\n  return {\n    isOutOfRange: isOutOfRange,\n    isAtMax: isAtMax,\n    isAtMin: isAtMin,\n    precision: precision,\n    value: value,\n    valueAsNumber: valueAsNumber,\n    update: update,\n    reset: reset,\n    increment: increment,\n    decrement: decrement,\n    clamp: clamp,\n    cast: castValue,\n    setValue: setValue\n  };\n}\n\nfunction parse(value) {\n  return parseFloat(value.toString().replace(/[^\\w.-]+/g, \"\"));\n}\n\nfunction getDecimalPlaces(value, step) {\n  return Math.max(countDecimalPlaces(step), countDecimalPlaces(value));\n}\n\nfunction cast(value, step, precision) {\n  var parsedValue = parse(value);\n  if (Number.isNaN(parsedValue)) return undefined;\n  var decimalPlaces = getDecimalPlaces(parsedValue, step);\n  return toPrecision(parsedValue, precision != null ? precision : decimalPlaces);\n}\n\nexport { useCounter };","map":{"version":3,"sources":["/Users/kendrawing/Documents/Coding Projects:Practice/1 Repos:Deployed/React-Ecommerce-Site/node_modules/@chakra-ui/counter/dist/chakra-ui-counter.esm.js"],"names":["useCallbackRef","useControllableProp","countDecimalPlaces","clampValue","toPrecision","minSafeInteger","maxSafeInteger","useState","useCallback","useCounter","props","_props","onChange","precisionProp","precision","defaultValue","valueProp","value","_props$step","step","stepProp","_props$min","min","_props$max","max","_props$keepWithinRang","keepWithinRange","onChangeProp","_useState","_cast","cast","valueState","setValue","_useControllableProp","isControlled","decimalPlaces","getDecimalPlaces","parse","update","next","toString","clamp","nextValue","increment","decrement","reset","_cast2","castValue","_cast3","valueAsNumber","isOutOfRange","isAtMax","isAtMin","parseFloat","replace","Math","parsedValue","Number","isNaN","undefined"],"mappings":"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","sourcesContent":["import { useCallbackRef, useControllableProp } from '@chakra-ui/hooks';\nimport { countDecimalPlaces, clampValue, toPrecision, minSafeInteger, maxSafeInteger } from '@chakra-ui/utils';\nimport { useState, useCallback } from 'react';\n\nfunction useCounter(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      onChange = _props.onChange,\n      precisionProp = _props.precision,\n      defaultValue = _props.defaultValue,\n      valueProp = _props.value,\n      _props$step = _props.step,\n      stepProp = _props$step === void 0 ? 1 : _props$step,\n      _props$min = _props.min,\n      min = _props$min === void 0 ? minSafeInteger : _props$min,\n      _props$max = _props.max,\n      max = _props$max === void 0 ? maxSafeInteger : _props$max,\n      _props$keepWithinRang = _props.keepWithinRange,\n      keepWithinRange = _props$keepWithinRang === void 0 ? true : _props$keepWithinRang;\n  var onChangeProp = useCallbackRef(onChange);\n\n  var _useState = useState(function () {\n    var _cast;\n\n    if (defaultValue == null) return \"\";\n    return (_cast = cast(defaultValue, stepProp, precisionProp)) != null ? _cast : \"\";\n  }),\n      valueState = _useState[0],\n      setValue = _useState[1];\n  /**\n   * Because the component that consumes this hook can be controlled or uncontrolled\n   * we'll keep track of that\n   */\n\n\n  var _useControllableProp = useControllableProp(valueProp, valueState),\n      isControlled = _useControllableProp[0],\n      value = _useControllableProp[1];\n\n  var decimalPlaces = getDecimalPlaces(parse(value), stepProp);\n  var precision = precisionProp != null ? precisionProp : decimalPlaces;\n  var update = useCallback(function (next) {\n    if (next === value) return;\n\n    if (!isControlled) {\n      setValue(next.toString());\n    }\n\n    onChangeProp == null ? void 0 : onChangeProp(next.toString(), parse(next));\n  }, [onChangeProp, isControlled, value]); // Function to clamp the value and round it to the precision\n\n  var clamp = useCallback(function (value) {\n    var nextValue = value;\n\n    if (keepWithinRange) {\n      nextValue = clampValue(nextValue, min, max);\n    }\n\n    return toPrecision(nextValue, precision);\n  }, [precision, keepWithinRange, max, min]);\n  var increment = useCallback(function (step) {\n    if (step === void 0) {\n      step = stepProp;\n    }\n\n    var next;\n    /**\n     * Let's follow the native browser behavior for\n     * scenarios where the input starts empty (\"\")\n     */\n\n    if (value === \"\") {\n      /**\n       * If `min` is set, native input, starts at the `min`.\n       * Else, it starts at `step`\n       */\n      next = parse(step);\n    } else {\n      next = parse(value) + step;\n    }\n\n    next = clamp(next);\n    update(next);\n  }, [clamp, stepProp, update, value]);\n  var decrement = useCallback(function (step) {\n    if (step === void 0) {\n      step = stepProp;\n    }\n\n    var next; // Same thing here. We'll follow native implementation\n\n    if (value === \"\") {\n      next = parse(-step);\n    } else {\n      next = parse(value) - step;\n    }\n\n    next = clamp(next);\n    update(next);\n  }, [clamp, stepProp, update, value]);\n  var reset = useCallback(function () {\n    var next;\n\n    if (defaultValue == null) {\n      next = \"\";\n    } else {\n      var _cast2;\n\n      next = (_cast2 = cast(defaultValue, stepProp, precisionProp)) != null ? _cast2 : min;\n    }\n\n    update(next);\n  }, [defaultValue, precisionProp, stepProp, update, min]);\n  var castValue = useCallback(function (value) {\n    var _cast3;\n\n    var nextValue = (_cast3 = cast(value, stepProp, precision)) != null ? _cast3 : min;\n    update(nextValue);\n  }, [precision, stepProp, update, min]);\n  var valueAsNumber = parse(value);\n  /**\n   * Common range checks\n   */\n\n  var isOutOfRange = valueAsNumber > max || valueAsNumber < min;\n  var isAtMax = valueAsNumber === max;\n  var isAtMin = valueAsNumber === min;\n  return {\n    isOutOfRange: isOutOfRange,\n    isAtMax: isAtMax,\n    isAtMin: isAtMin,\n    precision: precision,\n    value: value,\n    valueAsNumber: valueAsNumber,\n    update: update,\n    reset: reset,\n    increment: increment,\n    decrement: decrement,\n    clamp: clamp,\n    cast: castValue,\n    setValue: setValue\n  };\n}\n\nfunction parse(value) {\n  return parseFloat(value.toString().replace(/[^\\w.-]+/g, \"\"));\n}\n\nfunction getDecimalPlaces(value, step) {\n  return Math.max(countDecimalPlaces(step), countDecimalPlaces(value));\n}\n\nfunction cast(value, step, precision) {\n  var parsedValue = parse(value);\n  if (Number.isNaN(parsedValue)) return undefined;\n  var decimalPlaces = getDecimalPlaces(parsedValue, step);\n  return toPrecision(parsedValue, precision != null ? precision : decimalPlaces);\n}\n\nexport { useCounter };\n"]},"metadata":{},"sourceType":"module"}