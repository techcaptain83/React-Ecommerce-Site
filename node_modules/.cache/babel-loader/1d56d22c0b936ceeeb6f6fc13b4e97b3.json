{"ast":null,"code":"import { useId, useBoolean } from '@chakra-ui/hooks';\nimport { forwardRef, useMultiStyleConfig, omitThemingProps, StylesProvider, chakra, useStyles, useStyleConfig } from '@chakra-ui/system';\nimport { cx, __DEV__, dataAttr, callAllHandlers, ariaAttr } from '@chakra-ui/utils';\nimport { createContext, mergeRefs } from '@chakra-ui/react-utils';\nimport * as React from 'react';\nimport Icon from '@chakra-ui/icon';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded$2 = [\"id\", \"isRequired\", \"isInvalid\", \"isDisabled\", \"isReadOnly\"],\n    _excluded2$1 = [\"getRootProps\", \"htmlProps\"];\n\nvar _createContext = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n}),\n    FormControlProvider = _createContext[0],\n    useFormControlContext = _createContext[1];\n\nfunction useFormControlProvider(props) {\n  var idProp = props.id,\n      isRequired = props.isRequired,\n      isInvalid = props.isInvalid,\n      isDisabled = props.isDisabled,\n      isReadOnly = props.isReadOnly,\n      htmlProps = _objectWithoutPropertiesLoose(props, _excluded$2); // Generate all the required ids\n\n\n  var uuid = useId();\n  var id = idProp || \"field-\" + uuid;\n  var labelId = id + \"-label\";\n  var feedbackId = id + \"-feedback\";\n  var helpTextId = id + \"-helptext\";\n  /**\n   * Track whether the `FormErrorMessage` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n\n  var _React$useState = React.useState(false),\n      hasFeedbackText = _React$useState[0],\n      setHasFeedbackText = _React$useState[1];\n  /**\n   * Track whether the `FormHelperText` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n\n\n  var _React$useState2 = React.useState(false),\n      hasHelpText = _React$useState2[0],\n      setHasHelpText = _React$useState2[1]; // Track whether the form element (e.g, `input`) has focus.\n\n\n  var _useBoolean = useBoolean(),\n      isFocused = _useBoolean[0],\n      setFocus = _useBoolean[1];\n\n  var getHelpTextProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({\n      id: helpTextId\n    }, props, {\n      /**\n       * Notify the field context when the help text is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, function (node) {\n        if (!node) return;\n        setHasHelpText(true);\n      })\n    });\n  }, [helpTextId]);\n  var getLabelProps = React.useCallback(function (props, forwardedRef) {\n    var _props$id, _props$htmlFor;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: (_props$id = props.id) != null ? _props$id : labelId,\n      htmlFor: (_props$htmlFor = props.htmlFor) != null ? _props$htmlFor : id\n    });\n  }, [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]);\n  var getErrorMessageProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({\n      id: feedbackId\n    }, props, {\n      /**\n       * Notify the field context when the error message is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, function (node) {\n        if (!node) return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    });\n  }, [feedbackId]);\n  var getRootProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, htmlProps, {\n      ref: forwardedRef,\n      role: \"group\"\n    });\n  }, [htmlProps]);\n  var getRequiredIndicatorProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props.children || \"*\"\n    });\n  }, []);\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: setFocus.on,\n    onBlur: setFocus.off,\n    hasFeedbackText: hasFeedbackText,\n    setHasFeedbackText: setHasFeedbackText,\n    hasHelpText: hasHelpText,\n    setHasHelpText: setHasHelpText,\n    id: id,\n    labelId: labelId,\n    feedbackId: feedbackId,\n    helpTextId: helpTextId,\n    htmlProps: htmlProps,\n    getHelpTextProps: getHelpTextProps,\n    getErrorMessageProps: getErrorMessageProps,\n    getRootProps: getRootProps,\n    getLabelProps: getLabelProps,\n    getRequiredIndicatorProps: getRequiredIndicatorProps\n  };\n}\n/**\n * FormControl provides context such as\n * `isInvalid`, `isDisabled`, and `isRequired` to form elements.\n *\n * This is commonly used in form elements such as `input`,\n * `select`, `textarea`, etc.\n */\n\n\nvar FormControl = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Form\", props);\n  var ownProps = omitThemingProps(props);\n\n  var _useFormControlProvid = useFormControlProvider(ownProps),\n      getRootProps = _useFormControlProvid.getRootProps;\n\n  _useFormControlProvid.htmlProps;\n\n  var context = _objectWithoutPropertiesLoose(_useFormControlProvid, _excluded2$1);\n\n  var className = cx(\"chakra-form-control\", props.className);\n  var contextValue = React.useMemo(function () {\n    return context;\n  }, [context]);\n  return /*#__PURE__*/React.createElement(FormControlProvider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({}, getRootProps({}, ref), {\n    className: className,\n    __css: styles[\"container\"]\n  }))));\n});\n\nif (__DEV__) {\n  FormControl.displayName = \"FormControl\";\n}\n/**\n * FormHelperText\n *\n * Assistive component that conveys additional guidance\n * about the field, such as how it will be used and what\n * types in values should be provided.\n */\n\n\nvar FormHelperText = /*#__PURE__*/forwardRef(function (props, ref) {\n  var field = useFormControlContext();\n  var styles = useStyles();\n  var className = cx(\"chakra-form__helper-text\", props.className);\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, field == null ? void 0 : field.getHelpTextProps(props, ref), {\n    __css: styles.helperText,\n    className: className\n  }));\n});\n\nif (__DEV__) {\n  FormHelperText.displayName = \"FormHelperText\";\n}\n\nvar _excluded$1 = [\"isDisabled\", \"isInvalid\", \"isReadOnly\", \"isRequired\"],\n    _excluded2 = [\"id\", \"disabled\", \"readOnly\", \"required\", \"isRequired\", \"isInvalid\", \"isReadOnly\", \"isDisabled\", \"onFocus\", \"onBlur\"];\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n *\n * @internal\n */\n\nfunction useFormControl(props) {\n  var _useFormControlProps = useFormControlProps(props),\n      isDisabled = _useFormControlProps.isDisabled,\n      isInvalid = _useFormControlProps.isInvalid,\n      isReadOnly = _useFormControlProps.isReadOnly,\n      isRequired = _useFormControlProps.isRequired,\n      rest = _objectWithoutPropertiesLoose(_useFormControlProps, _excluded$1);\n\n  return _extends({}, rest, {\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  });\n}\n/**\n * @internal\n */\n\n\nfunction useFormControlProps(props) {\n  var _ref, _ref2, _ref3;\n\n  var field = useFormControlContext();\n\n  var id = props.id,\n      disabled = props.disabled,\n      readOnly = props.readOnly,\n      required = props.required,\n      isRequired = props.isRequired,\n      isInvalid = props.isInvalid,\n      isReadOnly = props.isReadOnly,\n      isDisabled = props.isDisabled,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      rest = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  var labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : []; // Error message must be described first in all scenarios.\n\n  if (field != null && field.hasFeedbackText && field != null && field.isInvalid) {\n    labelIds.push(field.feedbackId);\n  }\n\n  if (field != null && field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n\n  return _extends({}, rest, {\n    \"aria-describedby\": labelIds.join(\" \") || undefined,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_ref = disabled != null ? disabled : isDisabled) != null ? _ref : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_ref2 = readOnly != null ? readOnly : isReadOnly) != null ? _ref2 : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_ref3 = required != null ? required : isRequired) != null ? _ref3 : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  });\n}\n/**\n * Used to provide feedback about an invalid input,\n * and suggest clear instructions on how to fix it.\n */\n\n\nvar FormErrorMessage = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"FormError\", props);\n  var ownProps = omitThemingProps(props);\n  var field = useFormControlContext();\n  if (!(field != null && field.isInvalid)) return null;\n  return /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({}, field == null ? void 0 : field.getErrorMessageProps(ownProps, ref), {\n    className: cx(\"chakra-form__error-message\", props.className),\n    __css: _extends({\n      display: \"flex\",\n      alignItems: \"center\"\n    }, styles.text)\n  })));\n});\n\nif (__DEV__) {\n  FormErrorMessage.displayName = \"FormErrorMessage\";\n}\n/**\n * Used as the visual indicator that a field is invalid or\n * a field has incorrect values.\n */\n\n\nvar FormErrorIcon = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  var field = useFormControlContext();\n  if (!(field != null && field.isInvalid)) return null;\n\n  var _className = cx(\"chakra-form__error-icon\", props.className);\n\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    ref: ref,\n    \"aria-hidden\": true\n  }, props, {\n    __css: styles.icon,\n    className: _className\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z\"\n  }));\n});\n\nif (__DEV__) {\n  FormErrorIcon.displayName = \"FormErrorIcon\";\n}\n\nvar _excluded = [\"className\", \"children\", \"requiredIndicator\"];\n/**\n * Used to enhance the usability of form controls.\n *\n * It is used to inform users as to what information\n * is requested for a form field.\n *\n * ♿️ Accessibility: Every form field should have a form label.\n */\n\nvar FormLabel = /*#__PURE__*/forwardRef(function (passedProps, ref) {\n  var _field$getLabelProps;\n\n  var styles = useStyleConfig(\"FormLabel\", passedProps);\n  var props = omitThemingProps(passedProps);\n  props.className;\n\n  var children = props.children,\n      _props$requiredIndica = props.requiredIndicator,\n      requiredIndicator = _props$requiredIndica === void 0 ? /*#__PURE__*/React.createElement(RequiredIndicator, null) : _props$requiredIndica,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var field = useFormControlContext();\n  var ownProps = (_field$getLabelProps = field == null ? void 0 : field.getLabelProps(rest, ref)) != null ? _field$getLabelProps : _extends({\n    ref: ref\n  }, rest);\n  return /*#__PURE__*/React.createElement(chakra.label, _extends({}, ownProps, {\n    className: cx(\"chakra-form__label\", props.className),\n    __css: _extends({\n      display: \"block\",\n      textAlign: \"start\"\n    }, styles)\n  }), children, field != null && field.isRequired ? requiredIndicator : null);\n});\n\nif (__DEV__) {\n  FormLabel.displayName = \"FormLabel\";\n}\n/**\n * Used to show a \"required\" text or an asterisks (*) to indicate that\n * a field is required.\n */\n\n\nvar RequiredIndicator = /*#__PURE__*/forwardRef(function (props, ref) {\n  var field = useFormControlContext();\n  var styles = useStyles();\n  if (!(field != null && field.isRequired)) return null;\n  var className = cx(\"chakra-form__required-indicator\", props.className);\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({}, field == null ? void 0 : field.getRequiredIndicatorProps(props, ref), {\n    __css: styles.requiredIndicator,\n    className: className\n  }));\n});\n\nif (__DEV__) {\n  RequiredIndicator.displayName = \"RequiredIndicator\";\n}\n\nexport { FormControl, FormErrorIcon, FormErrorMessage, FormHelperText, FormLabel, RequiredIndicator, useFormControl, useFormControlContext, useFormControlProps };","map":{"version":3,"sources":["/Users/kendrawing/Documents/Coding Projects:Practice/1 Repos:Deployed/React-Ecommerce-Site/node_modules/@chakra-ui/form-control/dist/chakra-ui-form-control.esm.js"],"names":["useId","useBoolean","forwardRef","useMultiStyleConfig","omitThemingProps","StylesProvider","chakra","useStyles","useStyleConfig","cx","__DEV__","dataAttr","callAllHandlers","ariaAttr","createContext","mergeRefs","React","Icon","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded$2","_excluded2$1","_createContext","strict","name","FormControlProvider","useFormControlContext","useFormControlProvider","props","idProp","id","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","labelId","feedbackId","helpTextId","_React$useState","useState","hasFeedbackText","setHasFeedbackText","_React$useState2","hasHelpText","setHasHelpText","_useBoolean","isFocused","setFocus","getHelpTextProps","useCallback","forwardedRef","ref","node","getLabelProps","_props$id","_props$htmlFor","htmlFor","getErrorMessageProps","getRootProps","role","getRequiredIndicatorProps","children","onFocus","on","onBlur","off","FormControl","styles","ownProps","_useFormControlProvid","context","className","contextValue","useMemo","createElement","value","div","__css","displayName","FormHelperText","field","helperText","_excluded$1","_excluded2","useFormControl","_useFormControlProps","useFormControlProps","rest","disabled","readOnly","required","_ref","_ref2","_ref3","labelIds","push","join","undefined","FormErrorMessage","display","alignItems","text","FormErrorIcon","_className","icon","fill","d","_excluded","FormLabel","passedProps","_field$getLabelProps","_props$requiredIndica","requiredIndicator","RequiredIndicator","label","textAlign","span"],"mappings":"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","sourcesContent":["import { useId, useBoolean } from '@chakra-ui/hooks';\nimport { forwardRef, useMultiStyleConfig, omitThemingProps, StylesProvider, chakra, useStyles, useStyleConfig } from '@chakra-ui/system';\nimport { cx, __DEV__, dataAttr, callAllHandlers, ariaAttr } from '@chakra-ui/utils';\nimport { createContext, mergeRefs } from '@chakra-ui/react-utils';\nimport * as React from 'react';\nimport Icon from '@chakra-ui/icon';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded$2 = [\"id\", \"isRequired\", \"isInvalid\", \"isDisabled\", \"isReadOnly\"],\n    _excluded2$1 = [\"getRootProps\", \"htmlProps\"];\n\nvar _createContext = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n}),\n    FormControlProvider = _createContext[0],\n    useFormControlContext = _createContext[1];\n\nfunction useFormControlProvider(props) {\n  var idProp = props.id,\n      isRequired = props.isRequired,\n      isInvalid = props.isInvalid,\n      isDisabled = props.isDisabled,\n      isReadOnly = props.isReadOnly,\n      htmlProps = _objectWithoutPropertiesLoose(props, _excluded$2); // Generate all the required ids\n\n\n  var uuid = useId();\n  var id = idProp || \"field-\" + uuid;\n  var labelId = id + \"-label\";\n  var feedbackId = id + \"-feedback\";\n  var helpTextId = id + \"-helptext\";\n  /**\n   * Track whether the `FormErrorMessage` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n\n  var _React$useState = React.useState(false),\n      hasFeedbackText = _React$useState[0],\n      setHasFeedbackText = _React$useState[1];\n  /**\n   * Track whether the `FormHelperText` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n\n\n  var _React$useState2 = React.useState(false),\n      hasHelpText = _React$useState2[0],\n      setHasHelpText = _React$useState2[1]; // Track whether the form element (e.g, `input`) has focus.\n\n\n  var _useBoolean = useBoolean(),\n      isFocused = _useBoolean[0],\n      setFocus = _useBoolean[1];\n\n  var getHelpTextProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({\n      id: helpTextId\n    }, props, {\n      /**\n       * Notify the field context when the help text is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, function (node) {\n        if (!node) return;\n        setHasHelpText(true);\n      })\n    });\n  }, [helpTextId]);\n  var getLabelProps = React.useCallback(function (props, forwardedRef) {\n    var _props$id, _props$htmlFor;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: (_props$id = props.id) != null ? _props$id : labelId,\n      htmlFor: (_props$htmlFor = props.htmlFor) != null ? _props$htmlFor : id\n    });\n  }, [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]);\n  var getErrorMessageProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({\n      id: feedbackId\n    }, props, {\n      /**\n       * Notify the field context when the error message is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, function (node) {\n        if (!node) return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    });\n  }, [feedbackId]);\n  var getRootProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, htmlProps, {\n      ref: forwardedRef,\n      role: \"group\"\n    });\n  }, [htmlProps]);\n  var getRequiredIndicatorProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props.children || \"*\"\n    });\n  }, []);\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: setFocus.on,\n    onBlur: setFocus.off,\n    hasFeedbackText: hasFeedbackText,\n    setHasFeedbackText: setHasFeedbackText,\n    hasHelpText: hasHelpText,\n    setHasHelpText: setHasHelpText,\n    id: id,\n    labelId: labelId,\n    feedbackId: feedbackId,\n    helpTextId: helpTextId,\n    htmlProps: htmlProps,\n    getHelpTextProps: getHelpTextProps,\n    getErrorMessageProps: getErrorMessageProps,\n    getRootProps: getRootProps,\n    getLabelProps: getLabelProps,\n    getRequiredIndicatorProps: getRequiredIndicatorProps\n  };\n}\n\n/**\n * FormControl provides context such as\n * `isInvalid`, `isDisabled`, and `isRequired` to form elements.\n *\n * This is commonly used in form elements such as `input`,\n * `select`, `textarea`, etc.\n */\nvar FormControl = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Form\", props);\n  var ownProps = omitThemingProps(props);\n\n  var _useFormControlProvid = useFormControlProvider(ownProps),\n      getRootProps = _useFormControlProvid.getRootProps;\n      _useFormControlProvid.htmlProps;\n      var context = _objectWithoutPropertiesLoose(_useFormControlProvid, _excluded2$1);\n\n  var className = cx(\"chakra-form-control\", props.className);\n  var contextValue = React.useMemo(function () {\n    return context;\n  }, [context]);\n  return /*#__PURE__*/React.createElement(FormControlProvider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({}, getRootProps({}, ref), {\n    className: className,\n    __css: styles[\"container\"]\n  }))));\n});\n\nif (__DEV__) {\n  FormControl.displayName = \"FormControl\";\n}\n\n/**\n * FormHelperText\n *\n * Assistive component that conveys additional guidance\n * about the field, such as how it will be used and what\n * types in values should be provided.\n */\nvar FormHelperText = /*#__PURE__*/forwardRef(function (props, ref) {\n  var field = useFormControlContext();\n  var styles = useStyles();\n  var className = cx(\"chakra-form__helper-text\", props.className);\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, field == null ? void 0 : field.getHelpTextProps(props, ref), {\n    __css: styles.helperText,\n    className: className\n  }));\n});\n\nif (__DEV__) {\n  FormHelperText.displayName = \"FormHelperText\";\n}\n\nvar _excluded$1 = [\"isDisabled\", \"isInvalid\", \"isReadOnly\", \"isRequired\"],\n    _excluded2 = [\"id\", \"disabled\", \"readOnly\", \"required\", \"isRequired\", \"isInvalid\", \"isReadOnly\", \"isDisabled\", \"onFocus\", \"onBlur\"];\n\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n *\n * @internal\n */\nfunction useFormControl(props) {\n  var _useFormControlProps = useFormControlProps(props),\n      isDisabled = _useFormControlProps.isDisabled,\n      isInvalid = _useFormControlProps.isInvalid,\n      isReadOnly = _useFormControlProps.isReadOnly,\n      isRequired = _useFormControlProps.isRequired,\n      rest = _objectWithoutPropertiesLoose(_useFormControlProps, _excluded$1);\n\n  return _extends({}, rest, {\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  });\n}\n/**\n * @internal\n */\n\nfunction useFormControlProps(props) {\n  var _ref, _ref2, _ref3;\n\n  var field = useFormControlContext();\n\n  var id = props.id,\n      disabled = props.disabled,\n      readOnly = props.readOnly,\n      required = props.required,\n      isRequired = props.isRequired,\n      isInvalid = props.isInvalid,\n      isReadOnly = props.isReadOnly,\n      isDisabled = props.isDisabled,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      rest = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  var labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : []; // Error message must be described first in all scenarios.\n\n  if (field != null && field.hasFeedbackText && field != null && field.isInvalid) {\n    labelIds.push(field.feedbackId);\n  }\n\n  if (field != null && field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n\n  return _extends({}, rest, {\n    \"aria-describedby\": labelIds.join(\" \") || undefined,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_ref = disabled != null ? disabled : isDisabled) != null ? _ref : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_ref2 = readOnly != null ? readOnly : isReadOnly) != null ? _ref2 : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_ref3 = required != null ? required : isRequired) != null ? _ref3 : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  });\n}\n\n/**\n * Used to provide feedback about an invalid input,\n * and suggest clear instructions on how to fix it.\n */\nvar FormErrorMessage = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"FormError\", props);\n  var ownProps = omitThemingProps(props);\n  var field = useFormControlContext();\n  if (!(field != null && field.isInvalid)) return null;\n  return /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({}, field == null ? void 0 : field.getErrorMessageProps(ownProps, ref), {\n    className: cx(\"chakra-form__error-message\", props.className),\n    __css: _extends({\n      display: \"flex\",\n      alignItems: \"center\"\n    }, styles.text)\n  })));\n});\n\nif (__DEV__) {\n  FormErrorMessage.displayName = \"FormErrorMessage\";\n}\n/**\n * Used as the visual indicator that a field is invalid or\n * a field has incorrect values.\n */\n\n\nvar FormErrorIcon = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  var field = useFormControlContext();\n  if (!(field != null && field.isInvalid)) return null;\n\n  var _className = cx(\"chakra-form__error-icon\", props.className);\n\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    ref: ref,\n    \"aria-hidden\": true\n  }, props, {\n    __css: styles.icon,\n    className: _className\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z\"\n  }));\n});\n\nif (__DEV__) {\n  FormErrorIcon.displayName = \"FormErrorIcon\";\n}\n\nvar _excluded = [\"className\", \"children\", \"requiredIndicator\"];\n\n/**\n * Used to enhance the usability of form controls.\n *\n * It is used to inform users as to what information\n * is requested for a form field.\n *\n * ♿️ Accessibility: Every form field should have a form label.\n */\nvar FormLabel = /*#__PURE__*/forwardRef(function (passedProps, ref) {\n  var _field$getLabelProps;\n\n  var styles = useStyleConfig(\"FormLabel\", passedProps);\n  var props = omitThemingProps(passedProps);\n\n  props.className;\n      var children = props.children,\n      _props$requiredIndica = props.requiredIndicator,\n      requiredIndicator = _props$requiredIndica === void 0 ? /*#__PURE__*/React.createElement(RequiredIndicator, null) : _props$requiredIndica,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var field = useFormControlContext();\n  var ownProps = (_field$getLabelProps = field == null ? void 0 : field.getLabelProps(rest, ref)) != null ? _field$getLabelProps : _extends({\n    ref: ref\n  }, rest);\n  return /*#__PURE__*/React.createElement(chakra.label, _extends({}, ownProps, {\n    className: cx(\"chakra-form__label\", props.className),\n    __css: _extends({\n      display: \"block\",\n      textAlign: \"start\"\n    }, styles)\n  }), children, field != null && field.isRequired ? requiredIndicator : null);\n});\n\nif (__DEV__) {\n  FormLabel.displayName = \"FormLabel\";\n}\n\n/**\n * Used to show a \"required\" text or an asterisks (*) to indicate that\n * a field is required.\n */\nvar RequiredIndicator = /*#__PURE__*/forwardRef(function (props, ref) {\n  var field = useFormControlContext();\n  var styles = useStyles();\n  if (!(field != null && field.isRequired)) return null;\n  var className = cx(\"chakra-form__required-indicator\", props.className);\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({}, field == null ? void 0 : field.getRequiredIndicatorProps(props, ref), {\n    __css: styles.requiredIndicator,\n    className: className\n  }));\n});\n\nif (__DEV__) {\n  RequiredIndicator.displayName = \"RequiredIndicator\";\n}\n\nexport { FormControl, FormErrorIcon, FormErrorMessage, FormHelperText, FormLabel, RequiredIndicator, useFormControl, useFormControlContext, useFormControlProps };\n"]},"metadata":{},"sourceType":"module"}