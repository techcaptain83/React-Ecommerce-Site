{"ast":null,"code":"import { forwardRef, useMultiStyleConfig, omitThemingProps, StylesProvider, chakra, useStyles } from '@chakra-ui/system';\nimport { normalizeEventKey, callAllHandlers, determineLazyBehavior, isUndefined, focus, omit, cx, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport { useClickable } from '@chakra-ui/clickable';\nimport { createDescendantContext } from '@chakra-ui/descendant';\nimport { useControllableState, useId, useSafeLayoutEffect } from '@chakra-ui/hooks';\nimport { createContext, mergeRefs, getValidChildren } from '@chakra-ui/react-utils';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded$1 = [\"defaultIndex\", \"onChange\", \"index\", \"isManual\", \"isLazy\", \"lazyBehavior\", \"orientation\", \"direction\"],\n    _excluded2$1 = [\"isDisabled\", \"isFocusable\"],\n    _excluded3 = [\"isSelected\", \"id\", \"children\"];\n/* -------------------------------------------------------------------------------------------------\n * Create context to track descendants and their indices\n * -----------------------------------------------------------------------------------------------*/\n\nvar _createDescendantCont = createDescendantContext(),\n    TabsDescendantsProvider = _createDescendantCont[0],\n    useTabsDescendantsContext = _createDescendantCont[1],\n    useTabsDescendants = _createDescendantCont[2],\n    useTabsDescendant = _createDescendantCont[3];\n/**\n * Tabs hooks that provides all the states, and accessibility\n * helpers to keep all things working properly.\n *\n * Its returned object will be passed unto a Context Provider\n * so all child components can read from it.\n * There is no document link yet\n * @see Docs https://chakra-ui.com/docs/components/useTabs\n */\n\n\nfunction useTabs(props) {\n  var defaultIndex = props.defaultIndex,\n      onChange = props.onChange,\n      index = props.index,\n      isManual = props.isManual,\n      isLazy = props.isLazy,\n      _props$lazyBehavior = props.lazyBehavior,\n      lazyBehavior = _props$lazyBehavior === void 0 ? \"unmount\" : _props$lazyBehavior,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? \"horizontal\" : _props$orientation,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? \"ltr\" : _props$direction,\n      htmlProps = _objectWithoutPropertiesLoose(props, _excluded$1);\n  /**\n   * We use this to keep track of the index of the focused tab.\n   *\n   * Tabs can be automatically activated, this means selection follows focus.\n   * When we navigate with the arrow keys, we move focus and selection to next/prev tab\n   *\n   * Tabs can also be manually activated, this means selection does not follow focus.\n   * When we navigate with the arrow keys, we only move focus NOT selection. The user\n   * will need not manually activate the tab using `Enter` or `Space`.\n   *\n   * This is why we need to keep track of the `focusedIndex` and `selectedIndex`\n   */\n\n\n  var _React$useState = React.useState(defaultIndex != null ? defaultIndex : 0),\n      focusedIndex = _React$useState[0],\n      setFocusedIndex = _React$useState[1];\n\n  var _useControllableState = useControllableState({\n    defaultValue: defaultIndex != null ? defaultIndex : 0,\n    value: index,\n    onChange: onChange\n  }),\n      selectedIndex = _useControllableState[0],\n      setSelectedIndex = _useControllableState[1];\n  /**\n   * Sync focused `index` with controlled `selectedIndex` (which is the `props.index`)\n   */\n\n\n  React.useEffect(function () {\n    if (index != null) {\n      setFocusedIndex(index);\n    }\n  }, [index]);\n  /**\n   * Think of `useDescendants` as a register for the tab nodes.\n   */\n\n  var descendants = useTabsDescendants();\n  /**\n   * Generate a unique id or use user-provided id for the tabs widget\n   */\n\n  var id = useId(props.id, \"tabs\");\n  return {\n    id: id,\n    selectedIndex: selectedIndex,\n    focusedIndex: focusedIndex,\n    setSelectedIndex: setSelectedIndex,\n    setFocusedIndex: setFocusedIndex,\n    isManual: isManual,\n    isLazy: isLazy,\n    lazyBehavior: lazyBehavior,\n    orientation: orientation,\n    descendants: descendants,\n    direction: direction,\n    htmlProps: htmlProps\n  };\n}\n\nvar _createContext = createContext({\n  name: \"TabsContext\",\n  errorMessage: \"useTabsContext: `context` is undefined. Seems you forgot to wrap all tabs components within <Tabs />\"\n}),\n    TabsProvider = _createContext[0],\n    useTabsContext = _createContext[1];\n/**\n * Tabs hook to manage multiple tab buttons,\n * and ensures only one tab is selected per time.\n *\n * @param props props object for the tablist\n */\n\n\nfunction useTabList(props) {\n  var _useTabsContext = useTabsContext(),\n      focusedIndex = _useTabsContext.focusedIndex,\n      orientation = _useTabsContext.orientation,\n      direction = _useTabsContext.direction;\n\n  var descendants = useTabsDescendantsContext();\n  var onKeyDown = React.useCallback(function (event) {\n    var _keyMap;\n\n    var nextTab = function nextTab() {\n      var next = descendants.nextEnabled(focusedIndex);\n      if (next) focus(next.node);\n    };\n\n    var prevTab = function prevTab() {\n      var prev = descendants.prevEnabled(focusedIndex);\n      if (prev) focus(prev.node);\n    };\n\n    var firstTab = function firstTab() {\n      var first = descendants.firstEnabled();\n      if (first) focus(first.node);\n    };\n\n    var lastTab = function lastTab() {\n      var last = descendants.lastEnabled();\n      if (last) focus(last.node);\n    };\n\n    var isHorizontal = orientation === \"horizontal\";\n    var isVertical = orientation === \"vertical\";\n    var eventKey = normalizeEventKey(event);\n    var ArrowStart = direction === \"ltr\" ? \"ArrowLeft\" : \"ArrowRight\";\n    var ArrowEnd = direction === \"ltr\" ? \"ArrowRight\" : \"ArrowLeft\";\n    var keyMap = (_keyMap = {}, _keyMap[ArrowStart] = function () {\n      return isHorizontal && prevTab();\n    }, _keyMap[ArrowEnd] = function () {\n      return isHorizontal && nextTab();\n    }, _keyMap.ArrowDown = function ArrowDown() {\n      return isVertical && nextTab();\n    }, _keyMap.ArrowUp = function ArrowUp() {\n      return isVertical && prevTab();\n    }, _keyMap.Home = firstTab, _keyMap.End = lastTab, _keyMap);\n    var action = keyMap[eventKey];\n\n    if (action) {\n      event.preventDefault();\n      action(event);\n    }\n  }, [descendants, focusedIndex, orientation, direction]);\n  return _extends({}, props, {\n    role: \"tablist\",\n    \"aria-orientation\": orientation,\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown)\n  });\n}\n/**\n * Tabs hook to manage each tab button.\n *\n * A tab can be disabled and focusable, or both,\n * hence the use of `useClickable` to handle this scenario\n */\n\n\nfunction useTab(props) {\n  var isDisabled = props.isDisabled,\n      isFocusable = props.isFocusable,\n      htmlProps = _objectWithoutPropertiesLoose(props, _excluded2$1);\n\n  var _useTabsContext2 = useTabsContext(),\n      setSelectedIndex = _useTabsContext2.setSelectedIndex,\n      isManual = _useTabsContext2.isManual,\n      id = _useTabsContext2.id,\n      setFocusedIndex = _useTabsContext2.setFocusedIndex,\n      selectedIndex = _useTabsContext2.selectedIndex;\n\n  var _useTabsDescendant = useTabsDescendant({\n    disabled: isDisabled && !isFocusable\n  }),\n      index = _useTabsDescendant.index,\n      register = _useTabsDescendant.register;\n\n  var isSelected = index === selectedIndex;\n\n  var onClick = function onClick() {\n    setSelectedIndex(index);\n  };\n\n  var onFocus = function onFocus() {\n    setFocusedIndex(index);\n    var isDisabledButFocusable = isDisabled && isFocusable;\n    var shouldSelect = !isManual && !isDisabledButFocusable;\n\n    if (shouldSelect) {\n      setSelectedIndex(index);\n    }\n  };\n\n  var clickableProps = useClickable(_extends({}, htmlProps, {\n    ref: mergeRefs(register, props.ref),\n    isDisabled: isDisabled,\n    isFocusable: isFocusable,\n    onClick: callAllHandlers(props.onClick, onClick)\n  }));\n  var type = \"button\";\n  return _extends({}, clickableProps, {\n    id: makeTabId(id, index),\n    role: \"tab\",\n    tabIndex: isSelected ? 0 : -1,\n    type: type,\n    \"aria-selected\": isSelected,\n    \"aria-controls\": makeTabPanelId(id, index),\n    onFocus: isDisabled ? undefined : callAllHandlers(props.onFocus, onFocus)\n  });\n}\n/**\n * Tabs hook for managing the visibility of multiple tab panels.\n *\n * Since only one panel can be show at a time, we use `cloneElement`\n * to inject `selected` panel to each TabPanel.\n *\n * It returns a cloned version of its children with\n * all functionality included.\n */\n\n\nfunction useTabPanels(props) {\n  var context = useTabsContext();\n  var id = context.id,\n      selectedIndex = context.selectedIndex;\n  var validChildren = getValidChildren(props.children);\n  var children = validChildren.map(function (child, index) {\n    return /*#__PURE__*/React.cloneElement(child, {\n      isSelected: index === selectedIndex,\n      id: makeTabPanelId(id, index),\n      // Refers to the associated tab element, and also provides an accessible name to the tab panel.\n      \"aria-labelledby\": makeTabId(id, index)\n    });\n  });\n  return _extends({}, props, {\n    children: children\n  });\n}\n/**\n * Tabs hook for managing the visible/hidden states\n * of the tab panel.\n *\n * @param props props object for the tab panel\n */\n\n\nfunction useTabPanel(props) {\n  var isSelected = props.isSelected,\n      id = props.id,\n      children = props.children,\n      htmlProps = _objectWithoutPropertiesLoose(props, _excluded3);\n\n  var _useTabsContext3 = useTabsContext(),\n      isLazy = _useTabsContext3.isLazy,\n      lazyBehavior = _useTabsContext3.lazyBehavior;\n\n  var hasBeenSelected = React.useRef(false);\n\n  if (isSelected) {\n    hasBeenSelected.current = true;\n  }\n\n  var shouldRenderChildren = determineLazyBehavior({\n    hasBeenSelected: hasBeenSelected.current,\n    isSelected: isSelected,\n    isLazy: isLazy,\n    lazyBehavior: lazyBehavior\n  });\n  return _extends({\n    // Puts the tabpanel in the page `Tab` sequence.\n    tabIndex: 0\n  }, htmlProps, {\n    children: shouldRenderChildren ? children : null,\n    role: \"tabpanel\",\n    hidden: !isSelected,\n    id: id\n  });\n}\n/**\n * Tabs hook to show an animated indicators that\n * follows the active tab.\n *\n * The way we do it is by measuring the DOM Rect (or dimensions)\n * of the active tab, and return that as CSS style for\n * the indicator.\n */\n\n\nfunction useTabIndicator() {\n  var context = useTabsContext();\n  var descendants = useTabsDescendantsContext();\n  var selectedIndex = context.selectedIndex,\n      orientation = context.orientation;\n  var isHorizontal = orientation === \"horizontal\";\n  var isVertical = orientation === \"vertical\"; // Get the clientRect of the selected tab\n\n  var _React$useState2 = React.useState(function () {\n    if (isHorizontal) return {\n      left: 0,\n      width: 0\n    };\n    if (isVertical) return {\n      top: 0,\n      height: 0\n    };\n    return undefined;\n  }),\n      rect = _React$useState2[0],\n      setRect = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      hasMeasured = _React$useState3[0],\n      setHasMeasured = _React$useState3[1]; // Update the selected tab rect when the selectedIndex changes\n\n\n  useSafeLayoutEffect(function () {\n    if (isUndefined(selectedIndex)) return undefined;\n    var tab = descendants.item(selectedIndex);\n    if (isUndefined(tab)) return undefined; // Horizontal Tab: Calculate width and left distance\n\n    if (isHorizontal) {\n      setRect({\n        left: tab.node.offsetLeft,\n        width: tab.node.offsetWidth\n      });\n    } // Vertical Tab: Calculate height and top distance\n\n\n    if (isVertical) {\n      setRect({\n        top: tab.node.offsetTop,\n        height: tab.node.offsetHeight\n      });\n    } // Prevent unwanted transition from 0 to measured rect\n    // by setting the measured state in the next tick\n\n\n    var id = requestAnimationFrame(function () {\n      setHasMeasured(true);\n    });\n    return function () {\n      if (id) {\n        cancelAnimationFrame(id);\n      }\n    };\n  }, [selectedIndex, isHorizontal, isVertical, descendants]);\n  return _extends({\n    position: \"absolute\",\n    transitionProperty: \"left, right, top, bottom\",\n    transitionDuration: hasMeasured ? \"200ms\" : \"0ms\",\n    transitionTimingFunction: \"cubic-bezier(0, 0, 0.2, 1)\"\n  }, rect);\n}\n\nfunction makeTabId(id, index) {\n  return id + \"--tab-\" + index;\n}\n\nfunction makeTabPanelId(id, index) {\n  return id + \"--tabpanel-\" + index;\n}\n\nvar _excluded = [\"children\", \"className\"],\n    _excluded2 = [\"htmlProps\", \"descendants\"];\n/**\n * Tabs\n *\n * Provides context and logic for all tabs components.\n */\n\nvar Tabs = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Tabs\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      children = _omitThemingProps.children,\n      className = _omitThemingProps.className,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);\n\n  var _useTabs = useTabs(rest),\n      htmlProps = _useTabs.htmlProps,\n      descendants = _useTabs.descendants,\n      ctx = _objectWithoutPropertiesLoose(_useTabs, _excluded2);\n\n  var context = React.useMemo(function () {\n    return ctx;\n  }, [ctx]);\n  var rootProps = omit(htmlProps, [\"isFitted\"]);\n  return /*#__PURE__*/React.createElement(TabsDescendantsProvider, {\n    value: descendants\n  }, /*#__PURE__*/React.createElement(TabsProvider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({\n    className: cx(\"chakra-tabs\", className),\n    ref: ref\n  }, rootProps, {\n    __css: styles.root\n  }), children))));\n});\n\nif (__DEV__) {\n  Tabs.displayName = \"Tabs\";\n}\n/**\n * Tab button used to activate a specific tab panel. It renders a `button`,\n * and is responsible for automatic and manual selection modes.\n */\n\n\nvar Tab = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  var tabProps = useTab(_extends({}, props, {\n    ref: ref\n  }));\n\n  var tabStyles = _extends({\n    outline: \"0\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }, styles.tab);\n\n  return /*#__PURE__*/React.createElement(chakra.button, _extends({}, tabProps, {\n    className: cx(\"chakra-tabs__tab\", props.className),\n    __css: tabStyles\n  }));\n});\n\nif (__DEV__) {\n  Tab.displayName = \"Tab\";\n}\n/**\n * TabList is used to manage a list of tab buttons. It renders a `div` by default,\n * and is responsible the keyboard interaction between tabs.\n */\n\n\nvar TabList = /*#__PURE__*/forwardRef(function (props, ref) {\n  var tablistProps = useTabList(_extends({}, props, {\n    ref: ref\n  }));\n  var styles = useStyles();\n\n  var tablistStyles = _extends({\n    display: \"flex\"\n  }, styles.tablist);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, tablistProps, {\n    className: cx(\"chakra-tabs__tablist\", props.className),\n    __css: tablistStyles\n  }));\n});\n\nif (__DEV__) {\n  TabList.displayName = \"TabList\";\n}\n/**\n * TabPanel\n * Used to render the content for a specific tab.\n */\n\n\nvar TabPanel = /*#__PURE__*/forwardRef(function (props, ref) {\n  var panelProps = useTabPanel(_extends({}, props, {\n    ref: ref\n  }));\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    outline: \"0\"\n  }, panelProps, {\n    className: cx(\"chakra-tabs__tab-panel\", props.className),\n    __css: styles.tabpanel\n  }));\n});\n\nif (__DEV__) {\n  TabPanel.displayName = \"TabPanel\";\n}\n/**\n * TabPanel\n *\n * Used to manage the rendering of multiple tab panels. It uses\n * `cloneElement` to hide/show tab panels.\n *\n * It renders a `div` by default.\n */\n\n\nvar TabPanels = /*#__PURE__*/forwardRef(function (props, ref) {\n  var panelsProps = useTabPanels(props);\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, panelsProps, {\n    width: \"100%\",\n    ref: ref,\n    className: cx(\"chakra-tabs__tab-panels\", props.className),\n    __css: styles.tabpanels\n  }));\n});\n\nif (__DEV__) {\n  TabPanels.displayName = \"TabPanels\";\n}\n/**\n * TabIndicator\n *\n * Used to render an active tab indicator that animates between\n * selected tabs.\n */\n\n\nvar TabIndicator = /*#__PURE__*/forwardRef(function (props, ref) {\n  var indicatorStyle = useTabIndicator();\n\n  var style = _extends({}, props.style, indicatorStyle);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref\n  }, props, {\n    className: cx(\"chakra-tabs__tab-indicator\", props.className),\n    style: style,\n    __css: styles.indicator\n  }));\n});\n\nif (__DEV__) {\n  TabIndicator.displayName = \"TabIndicator\";\n}\n\nexport { Tab, TabIndicator, TabList, TabPanel, TabPanels, Tabs, TabsDescendantsProvider, TabsProvider, useTab, useTabIndicator, useTabList, useTabPanel, useTabPanels, useTabs, useTabsContext, useTabsDescendant, useTabsDescendants, useTabsDescendantsContext };","map":{"version":3,"sources":["/Users/kendrawing/Documents/Coding Projects:Practice/1 Repos:Deployed/React-Ecommerce-Site/node_modules/@chakra-ui/tabs/dist/chakra-ui-tabs.esm.js"],"names":["forwardRef","useMultiStyleConfig","omitThemingProps","StylesProvider","chakra","useStyles","normalizeEventKey","callAllHandlers","determineLazyBehavior","isUndefined","focus","omit","cx","__DEV__","React","useClickable","createDescendantContext","useControllableState","useId","useSafeLayoutEffect","createContext","mergeRefs","getValidChildren","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded$1","_excluded2$1","_excluded3","_createDescendantCont","TabsDescendantsProvider","useTabsDescendantsContext","useTabsDescendants","useTabsDescendant","useTabs","props","defaultIndex","onChange","index","isManual","isLazy","_props$lazyBehavior","lazyBehavior","_props$orientation","orientation","_props$direction","direction","htmlProps","_React$useState","useState","focusedIndex","setFocusedIndex","_useControllableState","defaultValue","value","selectedIndex","setSelectedIndex","useEffect","descendants","id","_createContext","name","errorMessage","TabsProvider","useTabsContext","useTabList","_useTabsContext","onKeyDown","useCallback","event","_keyMap","nextTab","next","nextEnabled","node","prevTab","prev","prevEnabled","firstTab","first","firstEnabled","lastTab","last","lastEnabled","isHorizontal","isVertical","eventKey","ArrowStart","ArrowEnd","keyMap","ArrowDown","ArrowUp","Home","End","action","preventDefault","role","useTab","isDisabled","isFocusable","_useTabsContext2","_useTabsDescendant","disabled","register","isSelected","onClick","onFocus","isDisabledButFocusable","shouldSelect","clickableProps","ref","type","makeTabId","tabIndex","makeTabPanelId","undefined","useTabPanels","context","validChildren","children","map","child","cloneElement","useTabPanel","_useTabsContext3","hasBeenSelected","useRef","current","shouldRenderChildren","hidden","useTabIndicator","_React$useState2","left","width","top","height","rect","setRect","_React$useState3","hasMeasured","setHasMeasured","tab","item","offsetLeft","offsetWidth","offsetTop","offsetHeight","requestAnimationFrame","cancelAnimationFrame","position","transitionProperty","transitionDuration","transitionTimingFunction","_excluded","_excluded2","Tabs","styles","_omitThemingProps","className","rest","_useTabs","ctx","useMemo","rootProps","createElement","div","__css","root","displayName","Tab","tabProps","tabStyles","outline","display","alignItems","justifyContent","button","TabList","tablistProps","tablistStyles","tablist","TabPanel","panelProps","tabpanel","TabPanels","panelsProps","tabpanels","TabIndicator","indicatorStyle","style","indicator"],"mappings":"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","sourcesContent":["import { forwardRef, useMultiStyleConfig, omitThemingProps, StylesProvider, chakra, useStyles } from '@chakra-ui/system';\nimport { normalizeEventKey, callAllHandlers, determineLazyBehavior, isUndefined, focus, omit, cx, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport { useClickable } from '@chakra-ui/clickable';\nimport { createDescendantContext } from '@chakra-ui/descendant';\nimport { useControllableState, useId, useSafeLayoutEffect } from '@chakra-ui/hooks';\nimport { createContext, mergeRefs, getValidChildren } from '@chakra-ui/react-utils';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded$1 = [\"defaultIndex\", \"onChange\", \"index\", \"isManual\", \"isLazy\", \"lazyBehavior\", \"orientation\", \"direction\"],\n    _excluded2$1 = [\"isDisabled\", \"isFocusable\"],\n    _excluded3 = [\"isSelected\", \"id\", \"children\"];\n/* -------------------------------------------------------------------------------------------------\n * Create context to track descendants and their indices\n * -----------------------------------------------------------------------------------------------*/\n\nvar _createDescendantCont = createDescendantContext(),\n    TabsDescendantsProvider = _createDescendantCont[0],\n    useTabsDescendantsContext = _createDescendantCont[1],\n    useTabsDescendants = _createDescendantCont[2],\n    useTabsDescendant = _createDescendantCont[3];\n\n/**\n * Tabs hooks that provides all the states, and accessibility\n * helpers to keep all things working properly.\n *\n * Its returned object will be passed unto a Context Provider\n * so all child components can read from it.\n * There is no document link yet\n * @see Docs https://chakra-ui.com/docs/components/useTabs\n */\nfunction useTabs(props) {\n  var defaultIndex = props.defaultIndex,\n      onChange = props.onChange,\n      index = props.index,\n      isManual = props.isManual,\n      isLazy = props.isLazy,\n      _props$lazyBehavior = props.lazyBehavior,\n      lazyBehavior = _props$lazyBehavior === void 0 ? \"unmount\" : _props$lazyBehavior,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? \"horizontal\" : _props$orientation,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? \"ltr\" : _props$direction,\n      htmlProps = _objectWithoutPropertiesLoose(props, _excluded$1);\n  /**\n   * We use this to keep track of the index of the focused tab.\n   *\n   * Tabs can be automatically activated, this means selection follows focus.\n   * When we navigate with the arrow keys, we move focus and selection to next/prev tab\n   *\n   * Tabs can also be manually activated, this means selection does not follow focus.\n   * When we navigate with the arrow keys, we only move focus NOT selection. The user\n   * will need not manually activate the tab using `Enter` or `Space`.\n   *\n   * This is why we need to keep track of the `focusedIndex` and `selectedIndex`\n   */\n\n\n  var _React$useState = React.useState(defaultIndex != null ? defaultIndex : 0),\n      focusedIndex = _React$useState[0],\n      setFocusedIndex = _React$useState[1];\n\n  var _useControllableState = useControllableState({\n    defaultValue: defaultIndex != null ? defaultIndex : 0,\n    value: index,\n    onChange: onChange\n  }),\n      selectedIndex = _useControllableState[0],\n      setSelectedIndex = _useControllableState[1];\n  /**\n   * Sync focused `index` with controlled `selectedIndex` (which is the `props.index`)\n   */\n\n\n  React.useEffect(function () {\n    if (index != null) {\n      setFocusedIndex(index);\n    }\n  }, [index]);\n  /**\n   * Think of `useDescendants` as a register for the tab nodes.\n   */\n\n  var descendants = useTabsDescendants();\n  /**\n   * Generate a unique id or use user-provided id for the tabs widget\n   */\n\n  var id = useId(props.id, \"tabs\");\n  return {\n    id: id,\n    selectedIndex: selectedIndex,\n    focusedIndex: focusedIndex,\n    setSelectedIndex: setSelectedIndex,\n    setFocusedIndex: setFocusedIndex,\n    isManual: isManual,\n    isLazy: isLazy,\n    lazyBehavior: lazyBehavior,\n    orientation: orientation,\n    descendants: descendants,\n    direction: direction,\n    htmlProps: htmlProps\n  };\n}\n\nvar _createContext = createContext({\n  name: \"TabsContext\",\n  errorMessage: \"useTabsContext: `context` is undefined. Seems you forgot to wrap all tabs components within <Tabs />\"\n}),\n    TabsProvider = _createContext[0],\n    useTabsContext = _createContext[1];\n\n/**\n * Tabs hook to manage multiple tab buttons,\n * and ensures only one tab is selected per time.\n *\n * @param props props object for the tablist\n */\nfunction useTabList(props) {\n  var _useTabsContext = useTabsContext(),\n      focusedIndex = _useTabsContext.focusedIndex,\n      orientation = _useTabsContext.orientation,\n      direction = _useTabsContext.direction;\n\n  var descendants = useTabsDescendantsContext();\n  var onKeyDown = React.useCallback(function (event) {\n    var _keyMap;\n\n    var nextTab = function nextTab() {\n      var next = descendants.nextEnabled(focusedIndex);\n      if (next) focus(next.node);\n    };\n\n    var prevTab = function prevTab() {\n      var prev = descendants.prevEnabled(focusedIndex);\n      if (prev) focus(prev.node);\n    };\n\n    var firstTab = function firstTab() {\n      var first = descendants.firstEnabled();\n      if (first) focus(first.node);\n    };\n\n    var lastTab = function lastTab() {\n      var last = descendants.lastEnabled();\n      if (last) focus(last.node);\n    };\n\n    var isHorizontal = orientation === \"horizontal\";\n    var isVertical = orientation === \"vertical\";\n    var eventKey = normalizeEventKey(event);\n    var ArrowStart = direction === \"ltr\" ? \"ArrowLeft\" : \"ArrowRight\";\n    var ArrowEnd = direction === \"ltr\" ? \"ArrowRight\" : \"ArrowLeft\";\n    var keyMap = (_keyMap = {}, _keyMap[ArrowStart] = function () {\n      return isHorizontal && prevTab();\n    }, _keyMap[ArrowEnd] = function () {\n      return isHorizontal && nextTab();\n    }, _keyMap.ArrowDown = function ArrowDown() {\n      return isVertical && nextTab();\n    }, _keyMap.ArrowUp = function ArrowUp() {\n      return isVertical && prevTab();\n    }, _keyMap.Home = firstTab, _keyMap.End = lastTab, _keyMap);\n    var action = keyMap[eventKey];\n\n    if (action) {\n      event.preventDefault();\n      action(event);\n    }\n  }, [descendants, focusedIndex, orientation, direction]);\n  return _extends({}, props, {\n    role: \"tablist\",\n    \"aria-orientation\": orientation,\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown)\n  });\n}\n\n/**\n * Tabs hook to manage each tab button.\n *\n * A tab can be disabled and focusable, or both,\n * hence the use of `useClickable` to handle this scenario\n */\nfunction useTab(props) {\n  var isDisabled = props.isDisabled,\n      isFocusable = props.isFocusable,\n      htmlProps = _objectWithoutPropertiesLoose(props, _excluded2$1);\n\n  var _useTabsContext2 = useTabsContext(),\n      setSelectedIndex = _useTabsContext2.setSelectedIndex,\n      isManual = _useTabsContext2.isManual,\n      id = _useTabsContext2.id,\n      setFocusedIndex = _useTabsContext2.setFocusedIndex,\n      selectedIndex = _useTabsContext2.selectedIndex;\n\n  var _useTabsDescendant = useTabsDescendant({\n    disabled: isDisabled && !isFocusable\n  }),\n      index = _useTabsDescendant.index,\n      register = _useTabsDescendant.register;\n\n  var isSelected = index === selectedIndex;\n\n  var onClick = function onClick() {\n    setSelectedIndex(index);\n  };\n\n  var onFocus = function onFocus() {\n    setFocusedIndex(index);\n    var isDisabledButFocusable = isDisabled && isFocusable;\n    var shouldSelect = !isManual && !isDisabledButFocusable;\n\n    if (shouldSelect) {\n      setSelectedIndex(index);\n    }\n  };\n\n  var clickableProps = useClickable(_extends({}, htmlProps, {\n    ref: mergeRefs(register, props.ref),\n    isDisabled: isDisabled,\n    isFocusable: isFocusable,\n    onClick: callAllHandlers(props.onClick, onClick)\n  }));\n  var type = \"button\";\n  return _extends({}, clickableProps, {\n    id: makeTabId(id, index),\n    role: \"tab\",\n    tabIndex: isSelected ? 0 : -1,\n    type: type,\n    \"aria-selected\": isSelected,\n    \"aria-controls\": makeTabPanelId(id, index),\n    onFocus: isDisabled ? undefined : callAllHandlers(props.onFocus, onFocus)\n  });\n}\n\n/**\n * Tabs hook for managing the visibility of multiple tab panels.\n *\n * Since only one panel can be show at a time, we use `cloneElement`\n * to inject `selected` panel to each TabPanel.\n *\n * It returns a cloned version of its children with\n * all functionality included.\n */\nfunction useTabPanels(props) {\n  var context = useTabsContext();\n  var id = context.id,\n      selectedIndex = context.selectedIndex;\n  var validChildren = getValidChildren(props.children);\n  var children = validChildren.map(function (child, index) {\n    return /*#__PURE__*/React.cloneElement(child, {\n      isSelected: index === selectedIndex,\n      id: makeTabPanelId(id, index),\n      // Refers to the associated tab element, and also provides an accessible name to the tab panel.\n      \"aria-labelledby\": makeTabId(id, index)\n    });\n  });\n  return _extends({}, props, {\n    children: children\n  });\n}\n/**\n * Tabs hook for managing the visible/hidden states\n * of the tab panel.\n *\n * @param props props object for the tab panel\n */\n\nfunction useTabPanel(props) {\n  var isSelected = props.isSelected,\n      id = props.id,\n      children = props.children,\n      htmlProps = _objectWithoutPropertiesLoose(props, _excluded3);\n\n  var _useTabsContext3 = useTabsContext(),\n      isLazy = _useTabsContext3.isLazy,\n      lazyBehavior = _useTabsContext3.lazyBehavior;\n\n  var hasBeenSelected = React.useRef(false);\n\n  if (isSelected) {\n    hasBeenSelected.current = true;\n  }\n\n  var shouldRenderChildren = determineLazyBehavior({\n    hasBeenSelected: hasBeenSelected.current,\n    isSelected: isSelected,\n    isLazy: isLazy,\n    lazyBehavior: lazyBehavior\n  });\n  return _extends({\n    // Puts the tabpanel in the page `Tab` sequence.\n    tabIndex: 0\n  }, htmlProps, {\n    children: shouldRenderChildren ? children : null,\n    role: \"tabpanel\",\n    hidden: !isSelected,\n    id: id\n  });\n}\n/**\n * Tabs hook to show an animated indicators that\n * follows the active tab.\n *\n * The way we do it is by measuring the DOM Rect (or dimensions)\n * of the active tab, and return that as CSS style for\n * the indicator.\n */\n\nfunction useTabIndicator() {\n  var context = useTabsContext();\n  var descendants = useTabsDescendantsContext();\n  var selectedIndex = context.selectedIndex,\n      orientation = context.orientation;\n  var isHorizontal = orientation === \"horizontal\";\n  var isVertical = orientation === \"vertical\"; // Get the clientRect of the selected tab\n\n  var _React$useState2 = React.useState(function () {\n    if (isHorizontal) return {\n      left: 0,\n      width: 0\n    };\n    if (isVertical) return {\n      top: 0,\n      height: 0\n    };\n    return undefined;\n  }),\n      rect = _React$useState2[0],\n      setRect = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      hasMeasured = _React$useState3[0],\n      setHasMeasured = _React$useState3[1]; // Update the selected tab rect when the selectedIndex changes\n\n\n  useSafeLayoutEffect(function () {\n    if (isUndefined(selectedIndex)) return undefined;\n    var tab = descendants.item(selectedIndex);\n    if (isUndefined(tab)) return undefined; // Horizontal Tab: Calculate width and left distance\n\n    if (isHorizontal) {\n      setRect({\n        left: tab.node.offsetLeft,\n        width: tab.node.offsetWidth\n      });\n    } // Vertical Tab: Calculate height and top distance\n\n\n    if (isVertical) {\n      setRect({\n        top: tab.node.offsetTop,\n        height: tab.node.offsetHeight\n      });\n    } // Prevent unwanted transition from 0 to measured rect\n    // by setting the measured state in the next tick\n\n\n    var id = requestAnimationFrame(function () {\n      setHasMeasured(true);\n    });\n    return function () {\n      if (id) {\n        cancelAnimationFrame(id);\n      }\n    };\n  }, [selectedIndex, isHorizontal, isVertical, descendants]);\n  return _extends({\n    position: \"absolute\",\n    transitionProperty: \"left, right, top, bottom\",\n    transitionDuration: hasMeasured ? \"200ms\" : \"0ms\",\n    transitionTimingFunction: \"cubic-bezier(0, 0, 0.2, 1)\"\n  }, rect);\n}\n\nfunction makeTabId(id, index) {\n  return id + \"--tab-\" + index;\n}\n\nfunction makeTabPanelId(id, index) {\n  return id + \"--tabpanel-\" + index;\n}\n\nvar _excluded = [\"children\", \"className\"],\n    _excluded2 = [\"htmlProps\", \"descendants\"];\n\n/**\n * Tabs\n *\n * Provides context and logic for all tabs components.\n */\nvar Tabs = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Tabs\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      children = _omitThemingProps.children,\n      className = _omitThemingProps.className,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);\n\n  var _useTabs = useTabs(rest),\n      htmlProps = _useTabs.htmlProps,\n      descendants = _useTabs.descendants,\n      ctx = _objectWithoutPropertiesLoose(_useTabs, _excluded2);\n\n  var context = React.useMemo(function () {\n    return ctx;\n  }, [ctx]);\n  var rootProps = omit(htmlProps, [\"isFitted\"]);\n  return /*#__PURE__*/React.createElement(TabsDescendantsProvider, {\n    value: descendants\n  }, /*#__PURE__*/React.createElement(TabsProvider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({\n    className: cx(\"chakra-tabs\", className),\n    ref: ref\n  }, rootProps, {\n    __css: styles.root\n  }), children))));\n});\n\nif (__DEV__) {\n  Tabs.displayName = \"Tabs\";\n}\n\n/**\n * Tab button used to activate a specific tab panel. It renders a `button`,\n * and is responsible for automatic and manual selection modes.\n */\nvar Tab = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  var tabProps = useTab(_extends({}, props, {\n    ref: ref\n  }));\n\n  var tabStyles = _extends({\n    outline: \"0\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }, styles.tab);\n\n  return /*#__PURE__*/React.createElement(chakra.button, _extends({}, tabProps, {\n    className: cx(\"chakra-tabs__tab\", props.className),\n    __css: tabStyles\n  }));\n});\n\nif (__DEV__) {\n  Tab.displayName = \"Tab\";\n}\n\n/**\n * TabList is used to manage a list of tab buttons. It renders a `div` by default,\n * and is responsible the keyboard interaction between tabs.\n */\nvar TabList = /*#__PURE__*/forwardRef(function (props, ref) {\n  var tablistProps = useTabList(_extends({}, props, {\n    ref: ref\n  }));\n  var styles = useStyles();\n\n  var tablistStyles = _extends({\n    display: \"flex\"\n  }, styles.tablist);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, tablistProps, {\n    className: cx(\"chakra-tabs__tablist\", props.className),\n    __css: tablistStyles\n  }));\n});\n\nif (__DEV__) {\n  TabList.displayName = \"TabList\";\n}\n\n/**\n * TabPanel\n * Used to render the content for a specific tab.\n */\nvar TabPanel = /*#__PURE__*/forwardRef(function (props, ref) {\n  var panelProps = useTabPanel(_extends({}, props, {\n    ref: ref\n  }));\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    outline: \"0\"\n  }, panelProps, {\n    className: cx(\"chakra-tabs__tab-panel\", props.className),\n    __css: styles.tabpanel\n  }));\n});\n\nif (__DEV__) {\n  TabPanel.displayName = \"TabPanel\";\n}\n\n/**\n * TabPanel\n *\n * Used to manage the rendering of multiple tab panels. It uses\n * `cloneElement` to hide/show tab panels.\n *\n * It renders a `div` by default.\n */\nvar TabPanels = /*#__PURE__*/forwardRef(function (props, ref) {\n  var panelsProps = useTabPanels(props);\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, panelsProps, {\n    width: \"100%\",\n    ref: ref,\n    className: cx(\"chakra-tabs__tab-panels\", props.className),\n    __css: styles.tabpanels\n  }));\n});\n\nif (__DEV__) {\n  TabPanels.displayName = \"TabPanels\";\n}\n\n/**\n * TabIndicator\n *\n * Used to render an active tab indicator that animates between\n * selected tabs.\n */\nvar TabIndicator = /*#__PURE__*/forwardRef(function (props, ref) {\n  var indicatorStyle = useTabIndicator();\n\n  var style = _extends({}, props.style, indicatorStyle);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref\n  }, props, {\n    className: cx(\"chakra-tabs__tab-indicator\", props.className),\n    style: style,\n    __css: styles.indicator\n  }));\n});\n\nif (__DEV__) {\n  TabIndicator.displayName = \"TabIndicator\";\n}\n\nexport { Tab, TabIndicator, TabList, TabPanel, TabPanels, Tabs, TabsDescendantsProvider, TabsProvider, useTab, useTabIndicator, useTabList, useTabPanel, useTabPanels, useTabs, useTabsContext, useTabsDescendant, useTabsDescendants, useTabsDescendantsContext };\n"]},"metadata":{},"sourceType":"module"}