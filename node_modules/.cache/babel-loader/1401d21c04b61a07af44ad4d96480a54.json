{"ast":null,"code":"'use strict';\n\nvar BUTTER_CLIENT_VERSION = '1.2.5';\n\nvar axios = require('axios');\n\nvar resources = {\n  Post: require('./resources/Post'),\n  Category: require('./resources/Category'),\n  Tag: require('./resources/Tag'),\n  Author: require('./resources/Author'),\n  Feed: require('./resources/Feed'),\n  Content: require('./resources/Content'),\n  Page: require('./resources/Page')\n};\n\nfunction Butter(apiToken, testMode, timeout, axiosHook) {\n  if (!(this instanceof Butter)) {\n    return new Butter(apiToken, testMode, timeout, axiosHook);\n  }\n\n  if (!apiToken) {\n    throw 'ButterCMS API token not set';\n  } // Use live mode by default\n\n\n  var testMode = testMode || false; // 3000ms timeout by default\n\n  var timeout = timeout || 3000;\n\n  var requestMethods = this._prepMethods(apiToken, testMode, timeout, axiosHook);\n\n  this._prepResources(requestMethods);\n}\n\nButter.prototype = {\n  _prepResources: function (requestMethods) {\n    for (var name in resources) {\n      this[name[0].toLowerCase() + name.substring(1)] = new resources[name](requestMethods);\n    }\n  },\n  _prepMethods: function (apiToken, testMode, timeout, axiosHook) {\n    return {\n      get: function (url, params) {\n        var headers = {\n          'X-Butter-Client': 'JS/' + BUTTER_CLIENT_VERSION\n        }; // detect if library is called in server side\n\n        if (typeof window === 'undefined') {\n          headers['Accept-Encoding'] = 'gzip';\n        }\n\n        var conn = axios.create({\n          baseURL: 'https://api.buttercms.com/v2',\n          timeout: timeout,\n          headers: headers\n        });\n\n        if (axiosHook) {\n          axiosHook(conn);\n        }\n\n        var params = params || {}; // Add api token to query string\n\n        params.auth_token = apiToken; // Append &test=1&preview=1 query strings\n\n        if (testMode) {\n          params.test = 1;\n          params.preview = 1;\n        }\n\n        return conn.get(url, {\n          params: params\n        });\n      }\n    };\n  }\n};\nmodule.exports = Butter;","map":{"version":3,"sources":["/Users/kendrawing/Documents/Coding Projects:Practice/1 Repos:Deployed/React-Ecommerce-Site/node_modules/buttercms/lib/butter.js"],"names":["BUTTER_CLIENT_VERSION","axios","require","resources","Post","Category","Tag","Author","Feed","Content","Page","Butter","apiToken","testMode","timeout","axiosHook","requestMethods","_prepMethods","_prepResources","prototype","name","toLowerCase","substring","get","url","params","headers","window","conn","create","baseURL","auth_token","test","preview","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar BUTTER_CLIENT_VERSION = '1.2.5';\n\nvar axios = require('axios');\n\nvar resources = {\n  Post: require('./resources/Post'),\n  Category: require('./resources/Category'),\n  Tag: require('./resources/Tag'),\n  Author: require('./resources/Author'),\n  Feed: require('./resources/Feed'),\n  Content: require('./resources/Content'),\n  Page: require('./resources/Page')\n}\n\nfunction Butter(apiToken, testMode, timeout, axiosHook) {\n  if (!(this instanceof Butter)) {\n    return new Butter(apiToken, testMode, timeout, axiosHook);\n  }\n\n  if (!apiToken) {\n    throw 'ButterCMS API token not set';\n  }\n\n  // Use live mode by default\n  var testMode = testMode || false;\n\n  // 3000ms timeout by default\n  var timeout = timeout || 3000;\n\n  var requestMethods = this._prepMethods(apiToken, testMode, timeout, axiosHook);\n\n  this._prepResources(requestMethods);\n}\n\nButter.prototype = {\n  _prepResources: function(requestMethods) {\n    for (var name in resources) {\n      this[\n        name[0].toLowerCase() + name.substring(1)\n      ] = new resources[name](requestMethods);\n    }\n  },\n  _prepMethods: function(apiToken, testMode, timeout, axiosHook) {\n    return {\n      get: function(url, params) {\n        var headers = {'X-Butter-Client': 'JS/' + BUTTER_CLIENT_VERSION}\n        // detect if library is called in server side\n        if (typeof window === 'undefined'){\n          headers['Accept-Encoding'] = 'gzip'\n        }\n        var conn = axios.create({\n          baseURL: 'https://api.buttercms.com/v2',\n          timeout: timeout,\n          headers: headers\n        });\n\n        if (axiosHook) {\n          axiosHook(conn)\n        }\n\n        var params = params || {};\n\n        // Add api token to query string\n        params.auth_token = apiToken;\n\n        // Append &test=1&preview=1 query strings\n        if (testMode) {\n          params.test = 1\n          params.preview = 1\n        }\n\n        return conn.get(url, {params: params})\n      }\n    }\n  }\n}\n\nmodule.exports = Butter;\n"]},"metadata":{},"sourceType":"script"}