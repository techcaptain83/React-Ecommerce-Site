{"ast":null,"code":"import { forwardRef, useMultiStyleConfig, omitThemingProps, StylesProvider, chakra, useStyles } from '@chakra-ui/system';\nimport { focus, normalizeEventKey, isEmpty, getRelatedTarget, contains, ariaAttr, callAllHandlers, cx, runIfFn, __DEV__ } from '@chakra-ui/utils';\nimport { mergeRefs, createContext } from '@chakra-ui/react-utils';\nimport * as React from 'react';\nimport { useState, useRef, useCallback } from 'react';\nimport { useControllableState, useFocusOnPointerDown, useUpdateEffect } from '@chakra-ui/hooks';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded$1 = [\"onChange\", \"onCancel\", \"onSubmit\", \"value\", \"isDisabled\", \"defaultValue\", \"startWithEditView\", \"isPreviewFocusable\", \"submitOnBlur\", \"selectAllOnFocus\", \"placeholder\", \"onEdit\"];\n/**\n * React hook for managing the inline renaming of some text.\n *\n * @see Docs https://chakra-ui.com/editable\n */\n\nfunction useEditable(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      onChangeProp = _props.onChange,\n      onCancelProp = _props.onCancel,\n      onSubmitProp = _props.onSubmit,\n      valueProp = _props.value,\n      isDisabled = _props.isDisabled,\n      defaultValue = _props.defaultValue,\n      startWithEditView = _props.startWithEditView,\n      _props$isPreviewFocus = _props.isPreviewFocusable,\n      isPreviewFocusable = _props$isPreviewFocus === void 0 ? true : _props$isPreviewFocus,\n      _props$submitOnBlur = _props.submitOnBlur,\n      submitOnBlur = _props$submitOnBlur === void 0 ? true : _props$submitOnBlur,\n      _props$selectAllOnFoc = _props.selectAllOnFocus,\n      selectAllOnFocus = _props$selectAllOnFoc === void 0 ? true : _props$selectAllOnFoc,\n      placeholder = _props.placeholder,\n      onEditProp = _props.onEdit,\n      htmlProps = _objectWithoutPropertiesLoose(_props, _excluded$1);\n\n  var defaultIsEditing = Boolean(startWithEditView && !isDisabled);\n\n  var _useState = useState(defaultIsEditing),\n      isEditing = _useState[0],\n      setIsEditing = _useState[1];\n\n  var _useControllableState = useControllableState({\n    defaultValue: defaultValue || \"\",\n    value: valueProp,\n    onChange: onChangeProp\n  }),\n      value = _useControllableState[0],\n      setValue = _useControllableState[1];\n  /**\n   * Keep track of the previous value, so if users\n   * presses `cancel`, we can revert to it.\n   */\n\n\n  var _useState2 = useState(value),\n      prevValue = _useState2[0],\n      setPrevValue = _useState2[1];\n  /**\n   * Ref to help focus the input in edit mode\n   */\n\n\n  var inputRef = useRef(null);\n  var previewRef = useRef(null);\n  var editButtonRef = useRef(null);\n  var cancelButtonRef = useRef(null);\n  var submitButtonRef = useRef(null);\n  useFocusOnPointerDown({\n    ref: inputRef,\n    enabled: isEditing,\n    elements: [cancelButtonRef, submitButtonRef]\n  });\n  var isInteractive = !isEditing || !isDisabled;\n  useUpdateEffect(function () {\n    if (!isEditing) {\n      focus(editButtonRef.current);\n      return;\n    }\n\n    focus(inputRef.current, {\n      selectTextIfInput: selectAllOnFocus\n    });\n    onEditProp == null ? void 0 : onEditProp();\n  }, [isEditing, onEditProp, selectAllOnFocus]);\n  var onEdit = useCallback(function () {\n    if (isInteractive) {\n      setIsEditing(true);\n    }\n  }, [isInteractive]);\n  var onCancel = useCallback(function () {\n    setIsEditing(false);\n    setValue(prevValue);\n    onCancelProp == null ? void 0 : onCancelProp(prevValue);\n  }, [onCancelProp, setValue, prevValue]);\n  var onSubmit = useCallback(function () {\n    setIsEditing(false);\n    setPrevValue(value);\n    onSubmitProp == null ? void 0 : onSubmitProp(value);\n  }, [value, onSubmitProp]);\n  var onChange = useCallback(function (event) {\n    setValue(event.target.value);\n  }, [setValue]);\n  var onKeyDown = useCallback(function (event) {\n    var eventKey = normalizeEventKey(event);\n    var keyMap = {\n      Escape: onCancel,\n      Enter: function Enter(event) {\n        if (!event.shiftKey && !event.metaKey) {\n          onSubmit();\n        }\n      }\n    };\n    var action = keyMap[eventKey];\n\n    if (action) {\n      event.preventDefault();\n      action(event);\n    }\n  }, [onCancel, onSubmit]);\n  var isValueEmpty = isEmpty(value);\n  var onBlur = useCallback(function (event) {\n    var relatedTarget = getRelatedTarget(event);\n    var targetIsCancel = contains(cancelButtonRef.current, relatedTarget);\n    var targetIsSubmit = contains(submitButtonRef.current, relatedTarget);\n    var isValidBlur = !targetIsCancel && !targetIsSubmit;\n\n    if (isValidBlur && submitOnBlur) {\n      onSubmit();\n    }\n  }, [submitOnBlur, onSubmit]);\n  var getPreviewProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    var tabIndex = isInteractive && isPreviewFocusable ? 0 : undefined;\n    return _extends({}, props, {\n      ref: mergeRefs(ref, previewRef),\n      children: isValueEmpty ? placeholder : value,\n      hidden: isEditing,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      tabIndex: tabIndex,\n      onFocus: callAllHandlers(props.onFocus, onEdit)\n    });\n  }, [isDisabled, isEditing, isInteractive, isPreviewFocusable, isValueEmpty, onEdit, placeholder, value]);\n  var getInputProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      hidden: !isEditing,\n      placeholder: placeholder,\n      ref: mergeRefs(ref, inputRef),\n      disabled: isDisabled,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      value: value,\n      onBlur: callAllHandlers(props.onBlur, onBlur),\n      onChange: callAllHandlers(props.onChange, onChange),\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown)\n    });\n  }, [isDisabled, isEditing, onBlur, onChange, onKeyDown, placeholder, value]);\n  var getEditButtonProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({\n      \"aria-label\": \"Edit\"\n    }, props, {\n      type: \"button\",\n      onClick: callAllHandlers(props.onClick, onEdit),\n      ref: mergeRefs(ref, editButtonRef)\n    });\n  }, [onEdit]);\n  var getSubmitButtonProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      \"aria-label\": \"Submit\",\n      ref: mergeRefs(submitButtonRef, ref),\n      type: \"button\",\n      onClick: callAllHandlers(props.onClick, onSubmit)\n    });\n  }, [onSubmit]);\n  var getCancelButtonProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({\n      \"aria-label\": \"Cancel\",\n      id: \"cancel\"\n    }, props, {\n      ref: mergeRefs(cancelButtonRef, ref),\n      type: \"button\",\n      onClick: callAllHandlers(props.onClick, onCancel)\n    });\n  }, [onCancel]);\n  return {\n    isEditing: isEditing,\n    isDisabled: isDisabled,\n    isValueEmpty: isValueEmpty,\n    value: value,\n    onEdit: onEdit,\n    onCancel: onCancel,\n    onSubmit: onSubmit,\n    getPreviewProps: getPreviewProps,\n    getInputProps: getInputProps,\n    getEditButtonProps: getEditButtonProps,\n    getSubmitButtonProps: getSubmitButtonProps,\n    getCancelButtonProps: getCancelButtonProps,\n    htmlProps: htmlProps\n  };\n}\n\nvar _excluded = [\"htmlProps\"];\n\nvar _createContext = createContext({\n  name: \"EditableContext\",\n  errorMessage: \"useEditableContext: context is undefined. Seems you forgot to wrap the editable components in `<Editable />`\"\n}),\n    EditableProvider = _createContext[0],\n    useEditableContext = _createContext[1];\n/**\n * Editable\n *\n * The wrapper that provides context and logic for all editable\n * components. It renders a `div`\n */\n\n\nvar Editable = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Editable\", props);\n  var ownProps = omitThemingProps(props);\n\n  var _useEditable = useEditable(ownProps),\n      htmlProps = _useEditable.htmlProps,\n      context = _objectWithoutPropertiesLoose(_useEditable, _excluded);\n\n  var isEditing = context.isEditing,\n      onSubmit = context.onSubmit,\n      onCancel = context.onCancel,\n      onEdit = context.onEdit;\n\n  var _className = cx(\"chakra-editable\", props.className);\n\n  var children = runIfFn(props.children, {\n    isEditing: isEditing,\n    onSubmit: onSubmit,\n    onCancel: onCancel,\n    onEdit: onEdit\n  });\n  return /*#__PURE__*/React.createElement(EditableProvider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref\n  }, htmlProps, {\n    className: _className\n  }), children)));\n});\n\nif (__DEV__) {\n  Editable.displayName = \"Editable\";\n}\n\nvar commonStyles = {\n  fontSize: \"inherit\",\n  fontWeight: \"inherit\",\n  textAlign: \"inherit\",\n  bg: \"transparent\"\n};\n/**\n * EditablePreview\n *\n * The `span` used to display the final value, in the `preview` mode\n */\n\nvar EditablePreview = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _useEditableContext = useEditableContext(),\n      getPreviewProps = _useEditableContext.getPreviewProps;\n\n  var styles = useStyles();\n  var previewProps = getPreviewProps(props, ref);\n\n  var _className = cx(\"chakra-editable__preview\", props.className);\n\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({}, previewProps, {\n    __css: _extends({\n      cursor: \"text\",\n      display: \"inline-block\"\n    }, commonStyles, styles.preview),\n    className: _className\n  }));\n});\n\nif (__DEV__) {\n  EditablePreview.displayName = \"EditablePreview\";\n}\n/**\n * EditableInput\n *\n * The input used in the `edit` mode\n */\n\n\nvar EditableInput = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _useEditableContext2 = useEditableContext(),\n      getInputProps = _useEditableContext2.getInputProps;\n\n  var styles = useStyles();\n  var inputProps = getInputProps(props, ref);\n\n  var _className = cx(\"chakra-editable__input\", props.className);\n\n  return /*#__PURE__*/React.createElement(chakra.input, _extends({}, inputProps, {\n    __css: _extends({\n      outline: 0\n    }, commonStyles, styles.input),\n    className: _className\n  }));\n});\n\nif (__DEV__) {\n  EditableInput.displayName = \"EditableInput\";\n}\n/**\n * React hook use to gain access to the editable state and actions.\n */\n\n\nfunction useEditableState() {\n  var _useEditableContext3 = useEditableContext(),\n      isEditing = _useEditableContext3.isEditing,\n      onSubmit = _useEditableContext3.onSubmit,\n      onCancel = _useEditableContext3.onCancel,\n      onEdit = _useEditableContext3.onEdit,\n      isDisabled = _useEditableContext3.isDisabled;\n\n  return {\n    isEditing: isEditing,\n    onSubmit: onSubmit,\n    onCancel: onCancel,\n    onEdit: onEdit,\n    isDisabled: isDisabled\n  };\n}\n/**\n * React hook use to create controls for the editable component\n */\n\n\nfunction useEditableControls() {\n  var _useEditableContext4 = useEditableContext(),\n      isEditing = _useEditableContext4.isEditing,\n      getEditButtonProps = _useEditableContext4.getEditButtonProps,\n      getCancelButtonProps = _useEditableContext4.getCancelButtonProps,\n      getSubmitButtonProps = _useEditableContext4.getSubmitButtonProps;\n\n  return {\n    isEditing: isEditing,\n    getEditButtonProps: getEditButtonProps,\n    getCancelButtonProps: getCancelButtonProps,\n    getSubmitButtonProps: getSubmitButtonProps\n  };\n}\n\nexport { Editable, EditableInput, EditablePreview, useEditable, useEditableControls, useEditableState };","map":{"version":3,"sources":["/Users/kendrawing/Documents/Coding Projects:Practice/1 Repos:Deployed/React-Ecommerce-Site/node_modules/@chakra-ui/editable/dist/chakra-ui-editable.esm.js"],"names":["forwardRef","useMultiStyleConfig","omitThemingProps","StylesProvider","chakra","useStyles","focus","normalizeEventKey","isEmpty","getRelatedTarget","contains","ariaAttr","callAllHandlers","cx","runIfFn","__DEV__","mergeRefs","createContext","React","useState","useRef","useCallback","useControllableState","useFocusOnPointerDown","useUpdateEffect","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded$1","useEditable","props","_props","onChangeProp","onChange","onCancelProp","onCancel","onSubmitProp","onSubmit","valueProp","value","isDisabled","defaultValue","startWithEditView","_props$isPreviewFocus","isPreviewFocusable","_props$submitOnBlur","submitOnBlur","_props$selectAllOnFoc","selectAllOnFocus","placeholder","onEditProp","onEdit","htmlProps","defaultIsEditing","Boolean","_useState","isEditing","setIsEditing","_useControllableState","setValue","_useState2","prevValue","setPrevValue","inputRef","previewRef","editButtonRef","cancelButtonRef","submitButtonRef","ref","enabled","elements","isInteractive","current","selectTextIfInput","event","onKeyDown","eventKey","keyMap","Escape","Enter","shiftKey","metaKey","action","preventDefault","isValueEmpty","onBlur","relatedTarget","targetIsCancel","targetIsSubmit","isValidBlur","getPreviewProps","tabIndex","undefined","children","hidden","onFocus","getInputProps","disabled","getEditButtonProps","type","onClick","getSubmitButtonProps","getCancelButtonProps","id","_excluded","_createContext","name","errorMessage","EditableProvider","useEditableContext","Editable","styles","ownProps","_useEditable","context","_className","className","createElement","div","displayName","commonStyles","fontSize","fontWeight","textAlign","bg","EditablePreview","_useEditableContext","previewProps","span","__css","cursor","display","preview","EditableInput","_useEditableContext2","inputProps","input","outline","useEditableState","_useEditableContext3","useEditableControls","_useEditableContext4"],"mappings":"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","sourcesContent":["import { forwardRef, useMultiStyleConfig, omitThemingProps, StylesProvider, chakra, useStyles } from '@chakra-ui/system';\nimport { focus, normalizeEventKey, isEmpty, getRelatedTarget, contains, ariaAttr, callAllHandlers, cx, runIfFn, __DEV__ } from '@chakra-ui/utils';\nimport { mergeRefs, createContext } from '@chakra-ui/react-utils';\nimport * as React from 'react';\nimport { useState, useRef, useCallback } from 'react';\nimport { useControllableState, useFocusOnPointerDown, useUpdateEffect } from '@chakra-ui/hooks';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded$1 = [\"onChange\", \"onCancel\", \"onSubmit\", \"value\", \"isDisabled\", \"defaultValue\", \"startWithEditView\", \"isPreviewFocusable\", \"submitOnBlur\", \"selectAllOnFocus\", \"placeholder\", \"onEdit\"];\n\n/**\n * React hook for managing the inline renaming of some text.\n *\n * @see Docs https://chakra-ui.com/editable\n */\nfunction useEditable(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      onChangeProp = _props.onChange,\n      onCancelProp = _props.onCancel,\n      onSubmitProp = _props.onSubmit,\n      valueProp = _props.value,\n      isDisabled = _props.isDisabled,\n      defaultValue = _props.defaultValue,\n      startWithEditView = _props.startWithEditView,\n      _props$isPreviewFocus = _props.isPreviewFocusable,\n      isPreviewFocusable = _props$isPreviewFocus === void 0 ? true : _props$isPreviewFocus,\n      _props$submitOnBlur = _props.submitOnBlur,\n      submitOnBlur = _props$submitOnBlur === void 0 ? true : _props$submitOnBlur,\n      _props$selectAllOnFoc = _props.selectAllOnFocus,\n      selectAllOnFocus = _props$selectAllOnFoc === void 0 ? true : _props$selectAllOnFoc,\n      placeholder = _props.placeholder,\n      onEditProp = _props.onEdit,\n      htmlProps = _objectWithoutPropertiesLoose(_props, _excluded$1);\n\n  var defaultIsEditing = Boolean(startWithEditView && !isDisabled);\n\n  var _useState = useState(defaultIsEditing),\n      isEditing = _useState[0],\n      setIsEditing = _useState[1];\n\n  var _useControllableState = useControllableState({\n    defaultValue: defaultValue || \"\",\n    value: valueProp,\n    onChange: onChangeProp\n  }),\n      value = _useControllableState[0],\n      setValue = _useControllableState[1];\n  /**\n   * Keep track of the previous value, so if users\n   * presses `cancel`, we can revert to it.\n   */\n\n\n  var _useState2 = useState(value),\n      prevValue = _useState2[0],\n      setPrevValue = _useState2[1];\n  /**\n   * Ref to help focus the input in edit mode\n   */\n\n\n  var inputRef = useRef(null);\n  var previewRef = useRef(null);\n  var editButtonRef = useRef(null);\n  var cancelButtonRef = useRef(null);\n  var submitButtonRef = useRef(null);\n  useFocusOnPointerDown({\n    ref: inputRef,\n    enabled: isEditing,\n    elements: [cancelButtonRef, submitButtonRef]\n  });\n  var isInteractive = !isEditing || !isDisabled;\n  useUpdateEffect(function () {\n    if (!isEditing) {\n      focus(editButtonRef.current);\n      return;\n    }\n\n    focus(inputRef.current, {\n      selectTextIfInput: selectAllOnFocus\n    });\n    onEditProp == null ? void 0 : onEditProp();\n  }, [isEditing, onEditProp, selectAllOnFocus]);\n  var onEdit = useCallback(function () {\n    if (isInteractive) {\n      setIsEditing(true);\n    }\n  }, [isInteractive]);\n  var onCancel = useCallback(function () {\n    setIsEditing(false);\n    setValue(prevValue);\n    onCancelProp == null ? void 0 : onCancelProp(prevValue);\n  }, [onCancelProp, setValue, prevValue]);\n  var onSubmit = useCallback(function () {\n    setIsEditing(false);\n    setPrevValue(value);\n    onSubmitProp == null ? void 0 : onSubmitProp(value);\n  }, [value, onSubmitProp]);\n  var onChange = useCallback(function (event) {\n    setValue(event.target.value);\n  }, [setValue]);\n  var onKeyDown = useCallback(function (event) {\n    var eventKey = normalizeEventKey(event);\n    var keyMap = {\n      Escape: onCancel,\n      Enter: function Enter(event) {\n        if (!event.shiftKey && !event.metaKey) {\n          onSubmit();\n        }\n      }\n    };\n    var action = keyMap[eventKey];\n\n    if (action) {\n      event.preventDefault();\n      action(event);\n    }\n  }, [onCancel, onSubmit]);\n  var isValueEmpty = isEmpty(value);\n  var onBlur = useCallback(function (event) {\n    var relatedTarget = getRelatedTarget(event);\n    var targetIsCancel = contains(cancelButtonRef.current, relatedTarget);\n    var targetIsSubmit = contains(submitButtonRef.current, relatedTarget);\n    var isValidBlur = !targetIsCancel && !targetIsSubmit;\n\n    if (isValidBlur && submitOnBlur) {\n      onSubmit();\n    }\n  }, [submitOnBlur, onSubmit]);\n  var getPreviewProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    var tabIndex = isInteractive && isPreviewFocusable ? 0 : undefined;\n    return _extends({}, props, {\n      ref: mergeRefs(ref, previewRef),\n      children: isValueEmpty ? placeholder : value,\n      hidden: isEditing,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      tabIndex: tabIndex,\n      onFocus: callAllHandlers(props.onFocus, onEdit)\n    });\n  }, [isDisabled, isEditing, isInteractive, isPreviewFocusable, isValueEmpty, onEdit, placeholder, value]);\n  var getInputProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      hidden: !isEditing,\n      placeholder: placeholder,\n      ref: mergeRefs(ref, inputRef),\n      disabled: isDisabled,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      value: value,\n      onBlur: callAllHandlers(props.onBlur, onBlur),\n      onChange: callAllHandlers(props.onChange, onChange),\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown)\n    });\n  }, [isDisabled, isEditing, onBlur, onChange, onKeyDown, placeholder, value]);\n  var getEditButtonProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({\n      \"aria-label\": \"Edit\"\n    }, props, {\n      type: \"button\",\n      onClick: callAllHandlers(props.onClick, onEdit),\n      ref: mergeRefs(ref, editButtonRef)\n    });\n  }, [onEdit]);\n  var getSubmitButtonProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      \"aria-label\": \"Submit\",\n      ref: mergeRefs(submitButtonRef, ref),\n      type: \"button\",\n      onClick: callAllHandlers(props.onClick, onSubmit)\n    });\n  }, [onSubmit]);\n  var getCancelButtonProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({\n      \"aria-label\": \"Cancel\",\n      id: \"cancel\"\n    }, props, {\n      ref: mergeRefs(cancelButtonRef, ref),\n      type: \"button\",\n      onClick: callAllHandlers(props.onClick, onCancel)\n    });\n  }, [onCancel]);\n  return {\n    isEditing: isEditing,\n    isDisabled: isDisabled,\n    isValueEmpty: isValueEmpty,\n    value: value,\n    onEdit: onEdit,\n    onCancel: onCancel,\n    onSubmit: onSubmit,\n    getPreviewProps: getPreviewProps,\n    getInputProps: getInputProps,\n    getEditButtonProps: getEditButtonProps,\n    getSubmitButtonProps: getSubmitButtonProps,\n    getCancelButtonProps: getCancelButtonProps,\n    htmlProps: htmlProps\n  };\n}\n\nvar _excluded = [\"htmlProps\"];\n\nvar _createContext = createContext({\n  name: \"EditableContext\",\n  errorMessage: \"useEditableContext: context is undefined. Seems you forgot to wrap the editable components in `<Editable />`\"\n}),\n    EditableProvider = _createContext[0],\n    useEditableContext = _createContext[1];\n\n/**\n * Editable\n *\n * The wrapper that provides context and logic for all editable\n * components. It renders a `div`\n */\nvar Editable = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Editable\", props);\n  var ownProps = omitThemingProps(props);\n\n  var _useEditable = useEditable(ownProps),\n      htmlProps = _useEditable.htmlProps,\n      context = _objectWithoutPropertiesLoose(_useEditable, _excluded);\n\n  var isEditing = context.isEditing,\n      onSubmit = context.onSubmit,\n      onCancel = context.onCancel,\n      onEdit = context.onEdit;\n\n  var _className = cx(\"chakra-editable\", props.className);\n\n  var children = runIfFn(props.children, {\n    isEditing: isEditing,\n    onSubmit: onSubmit,\n    onCancel: onCancel,\n    onEdit: onEdit\n  });\n  return /*#__PURE__*/React.createElement(EditableProvider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref\n  }, htmlProps, {\n    className: _className\n  }), children)));\n});\n\nif (__DEV__) {\n  Editable.displayName = \"Editable\";\n}\n\nvar commonStyles = {\n  fontSize: \"inherit\",\n  fontWeight: \"inherit\",\n  textAlign: \"inherit\",\n  bg: \"transparent\"\n};\n\n/**\n * EditablePreview\n *\n * The `span` used to display the final value, in the `preview` mode\n */\nvar EditablePreview = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _useEditableContext = useEditableContext(),\n      getPreviewProps = _useEditableContext.getPreviewProps;\n\n  var styles = useStyles();\n  var previewProps = getPreviewProps(props, ref);\n\n  var _className = cx(\"chakra-editable__preview\", props.className);\n\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({}, previewProps, {\n    __css: _extends({\n      cursor: \"text\",\n      display: \"inline-block\"\n    }, commonStyles, styles.preview),\n    className: _className\n  }));\n});\n\nif (__DEV__) {\n  EditablePreview.displayName = \"EditablePreview\";\n}\n\n/**\n * EditableInput\n *\n * The input used in the `edit` mode\n */\nvar EditableInput = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _useEditableContext2 = useEditableContext(),\n      getInputProps = _useEditableContext2.getInputProps;\n\n  var styles = useStyles();\n  var inputProps = getInputProps(props, ref);\n\n  var _className = cx(\"chakra-editable__input\", props.className);\n\n  return /*#__PURE__*/React.createElement(chakra.input, _extends({}, inputProps, {\n    __css: _extends({\n      outline: 0\n    }, commonStyles, styles.input),\n    className: _className\n  }));\n});\n\nif (__DEV__) {\n  EditableInput.displayName = \"EditableInput\";\n}\n/**\n * React hook use to gain access to the editable state and actions.\n */\n\n\nfunction useEditableState() {\n  var _useEditableContext3 = useEditableContext(),\n      isEditing = _useEditableContext3.isEditing,\n      onSubmit = _useEditableContext3.onSubmit,\n      onCancel = _useEditableContext3.onCancel,\n      onEdit = _useEditableContext3.onEdit,\n      isDisabled = _useEditableContext3.isDisabled;\n\n  return {\n    isEditing: isEditing,\n    onSubmit: onSubmit,\n    onCancel: onCancel,\n    onEdit: onEdit,\n    isDisabled: isDisabled\n  };\n}\n/**\n * React hook use to create controls for the editable component\n */\n\nfunction useEditableControls() {\n  var _useEditableContext4 = useEditableContext(),\n      isEditing = _useEditableContext4.isEditing,\n      getEditButtonProps = _useEditableContext4.getEditButtonProps,\n      getCancelButtonProps = _useEditableContext4.getCancelButtonProps,\n      getSubmitButtonProps = _useEditableContext4.getSubmitButtonProps;\n\n  return {\n    isEditing: isEditing,\n    getEditButtonProps: getEditButtonProps,\n    getCancelButtonProps: getCancelButtonProps,\n    getSubmitButtonProps: getSubmitButtonProps\n  };\n}\n\nexport { Editable, EditableInput, EditablePreview, useEditable, useEditableControls, useEditableState };\n"]},"metadata":{},"sourceType":"module"}