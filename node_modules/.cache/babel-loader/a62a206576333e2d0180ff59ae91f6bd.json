{"ast":null,"code":"import { isInputEvent, addItem, removeItem, __DEV__, warn, dataAttr, callAllHandlers, focus, callAll, cx } from '@chakra-ui/utils';\nimport { createContext, mergeRefs } from '@chakra-ui/react-utils';\nimport * as React from 'react';\nimport { useCallback, useRef, useState } from 'react';\nimport { useCallbackRef, useControllableState, useBoolean, useControllableProp, useSafeLayoutEffect } from '@chakra-ui/hooks';\nimport { chakra, forwardRef, useMultiStyleConfig, omitThemingProps } from '@chakra-ui/system';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { visuallyHiddenStyle } from '@chakra-ui/visually-hidden';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n/**\n * React hook that provides all the state management logic\n * for a group of checkboxes.\n *\n * It is consumed by the `CheckboxGroup` component\n */\n\n\nfunction useCheckboxGroup(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      defaultValue = _props.defaultValue,\n      valueProp = _props.value,\n      onChange = _props.onChange,\n      isDisabled = _props.isDisabled,\n      isNative = _props.isNative;\n  var onChangeProp = useCallbackRef(onChange);\n\n  var _useControllableState = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue || [],\n    onChange: onChangeProp\n  }),\n      value = _useControllableState[0],\n      setValue = _useControllableState[1];\n\n  var handleChange = useCallback(function (eventOrValue) {\n    if (!value) return;\n    var isChecked = isInputEvent(eventOrValue) ? eventOrValue.target.checked : !value.includes(eventOrValue);\n    var selectedValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n    var nextValue = isChecked ? addItem(value, selectedValue) : removeItem(value, selectedValue);\n    setValue(nextValue);\n  }, [setValue, value]);\n  var getCheckboxProps = useCallback(function (props) {\n    var _extends2;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    var checkedKey = isNative ? \"checked\" : \"isChecked\";\n    return _extends({}, props, (_extends2 = {}, _extends2[checkedKey] = value.includes(props.value), _extends2.onChange = handleChange, _extends2));\n  }, [handleChange, isNative, value]);\n  return {\n    value: value,\n    isDisabled: isDisabled,\n    onChange: handleChange,\n    setValue: setValue,\n    getCheckboxProps: getCheckboxProps\n  };\n}\n\nvar _createContext = createContext({\n  name: \"CheckboxGroupContext\",\n  strict: false\n}),\n    CheckboxGroupProvider = _createContext[0],\n    useCheckboxGroupContext = _createContext[1];\n/**\n * Used for multiple checkboxes which are bound in one group,\n * and it indicates whether one or more options are selected.\n *\n * @see Docs https://chakra-ui.com/checkbox\n */\n\n\nvar CheckboxGroup = function CheckboxGroup(props) {\n  var colorScheme = props.colorScheme,\n      size = props.size,\n      variant = props.variant,\n      children = props.children,\n      isDisabled = props.isDisabled;\n\n  var _useCheckboxGroup = useCheckboxGroup(props),\n      value = _useCheckboxGroup.value,\n      onChange = _useCheckboxGroup.onChange;\n\n  var group = React.useMemo(function () {\n    return {\n      size: size,\n      onChange: onChange,\n      colorScheme: colorScheme,\n      value: value,\n      variant: variant,\n      isDisabled: isDisabled\n    };\n  }, [size, onChange, colorScheme, value, variant, isDisabled]);\n  return /*#__PURE__*/React.createElement(CheckboxGroupProvider, {\n    value: group\n  }, children);\n};\n\nif (__DEV__) {\n  CheckboxGroup.displayName = \"CheckboxGroup\";\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded$2 = [\"isIndeterminate\", \"isChecked\"];\nvar MotionSvg = \"custom\" in motion ? motion.custom(chakra.svg) : motion(chakra.svg);\n\nvar CheckIcon = function CheckIcon(props) {\n  return /*#__PURE__*/React.createElement(MotionSvg, _extends({\n    width: \"1.2em\",\n    viewBox: \"0 0 12 10\",\n    variants: {\n      unchecked: {\n        opacity: 0,\n        strokeDashoffset: 16\n      },\n      checked: {\n        opacity: 1,\n        strokeDashoffset: 0,\n        transition: {\n          duration: 0.2\n        }\n      }\n    },\n    style: {\n      fill: \"none\",\n      strokeWidth: 2,\n      stroke: \"currentColor\",\n      strokeDasharray: 16\n    }\n  }, props), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"1.5 6 4.5 9 10.5 1\"\n  }));\n};\n\nvar IndeterminateIcon = function IndeterminateIcon(props) {\n  return /*#__PURE__*/React.createElement(MotionSvg, _extends({\n    width: \"1.2em\",\n    viewBox: \"0 0 24 24\",\n    variants: {\n      unchecked: {\n        scaleX: 0.65,\n        opacity: 0\n      },\n      checked: {\n        scaleX: 1,\n        opacity: 1,\n        transition: {\n          scaleX: {\n            duration: 0\n          },\n          opacity: {\n            duration: 0.02\n          }\n        }\n      }\n    },\n    style: {\n      stroke: \"currentColor\",\n      strokeWidth: 4\n    }\n  }, props), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"21\",\n    x2: \"3\",\n    y1: \"12\",\n    y2: \"12\"\n  }));\n};\n\nvar CheckboxTransition = function CheckboxTransition(_ref) {\n  var open = _ref.open,\n      children = _ref.children;\n  return /*#__PURE__*/React.createElement(AnimatePresence, {\n    initial: false\n  }, open && /*#__PURE__*/React.createElement(motion.div, {\n    variants: {\n      unchecked: {\n        scale: 0.5\n      },\n      checked: {\n        scale: 1\n      }\n    },\n    initial: \"unchecked\",\n    animate: \"checked\",\n    exit: \"unchecked\",\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100%\"\n    }\n  }, children));\n};\n/**\n * CheckboxIcon is used to visually indicate the checked or indeterminate\n * state of a checkbox.\n *\n * @todo allow users pass their own icon svgs\n */\n\n\nvar CheckboxIcon = function CheckboxIcon(props) {\n  var isIndeterminate = props.isIndeterminate,\n      isChecked = props.isChecked,\n      rest = _objectWithoutPropertiesLoose(props, _excluded$2);\n\n  var IconEl = isIndeterminate ? IndeterminateIcon : CheckIcon;\n  return /*#__PURE__*/React.createElement(CheckboxTransition, {\n    open: isChecked || isIndeterminate\n  }, /*#__PURE__*/React.createElement(IconEl, rest));\n};\n\nvar _excluded$1 = [\"defaultIsChecked\", \"defaultChecked\", \"isChecked\", \"isFocusable\", \"isDisabled\", \"isReadOnly\", \"isRequired\", \"onChange\", \"isIndeterminate\", \"isInvalid\", \"name\", \"value\", \"id\", \"onBlur\", \"onFocus\", \"tabIndex\", \"aria-label\", \"aria-labelledby\", \"aria-invalid\", \"aria-describedby\"];\n/**\n * useCheckbox that provides all the state and focus management logic\n * for a checkbox. It is consumed by the `Checkbox` component\n *\n * @see Docs https://chakra-ui.com/checkbox#hooks\n */\n\nfunction useCheckbox(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      defaultIsChecked = _props.defaultIsChecked,\n      _props$defaultChecked = _props.defaultChecked,\n      defaultChecked = _props$defaultChecked === void 0 ? defaultIsChecked : _props$defaultChecked,\n      checkedProp = _props.isChecked,\n      isFocusable = _props.isFocusable,\n      isDisabled = _props.isDisabled,\n      isReadOnly = _props.isReadOnly,\n      isRequired = _props.isRequired,\n      onChange = _props.onChange,\n      isIndeterminate = _props.isIndeterminate,\n      isInvalid = _props.isInvalid,\n      name = _props.name,\n      value = _props.value,\n      id = _props.id,\n      onBlur = _props.onBlur,\n      onFocus = _props.onFocus,\n      _props$tabIndex = _props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? undefined : _props$tabIndex,\n      ariaLabel = _props[\"aria-label\"],\n      ariaLabelledBy = _props[\"aria-labelledby\"],\n      ariaInvalid = _props[\"aria-invalid\"],\n      ariaDescribedBy = _props[\"aria-describedby\"],\n      htmlProps = _objectWithoutPropertiesLoose(_props, _excluded$1);\n\n  var onChangeProp = useCallbackRef(onChange);\n  var onBlurProp = useCallbackRef(onBlur);\n  var onFocusProp = useCallbackRef(onFocus);\n\n  var _useBoolean = useBoolean(),\n      isFocused = _useBoolean[0],\n      setFocused = _useBoolean[1];\n\n  var _useBoolean2 = useBoolean(),\n      isHovered = _useBoolean2[0],\n      setHovered = _useBoolean2[1];\n\n  var _useBoolean3 = useBoolean(),\n      isActive = _useBoolean3[0],\n      setActive = _useBoolean3[1];\n\n  var inputRef = useRef(null);\n\n  var _useState = useState(true),\n      rootIsLabelElement = _useState[0],\n      setRootIsLabelElement = _useState[1];\n\n  var _useState2 = useState(!!defaultChecked),\n      checkedState = _useState2[0],\n      setCheckedState = _useState2[1];\n\n  var _useControllableProp = useControllableProp(checkedProp, checkedState),\n      isControlled = _useControllableProp[0],\n      isChecked = _useControllableProp[1];\n\n  warn({\n    condition: !!defaultIsChecked,\n    message: 'The \"defaultIsChecked\" prop has been deprecated and will be removed in a future version. ' + 'Please use the \"defaultChecked\" prop instead, which mirrors default React checkbox behavior.'\n  });\n  var handleChange = useCallback(function (event) {\n    if (isReadOnly || isDisabled) {\n      event.preventDefault();\n      return;\n    }\n\n    if (!isControlled) {\n      if (isChecked) {\n        setCheckedState(event.target.checked);\n      } else {\n        setCheckedState(isIndeterminate ? true : event.target.checked);\n      }\n    }\n\n    onChangeProp == null ? void 0 : onChangeProp(event);\n  }, [isReadOnly, isDisabled, isChecked, isControlled, isIndeterminate, onChangeProp]);\n  useSafeLayoutEffect(function () {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate);\n    }\n  }, [isIndeterminate]);\n  var trulyDisabled = isDisabled && !isFocusable;\n  var onKeyDown = useCallback(function (event) {\n    if (event.key === \" \") {\n      setActive.on();\n    }\n  }, [setActive]);\n  var onKeyUp = useCallback(function (event) {\n    if (event.key === \" \") {\n      setActive.off();\n    }\n  }, [setActive]);\n  /**\n   * Sync state with uncontrolled form libraries like `react-hook-form`.\n   *\n   * These libraries set the checked value for input fields\n   * using their refs. For the checkbox, it sets `ref.current.checked = true | false` directly.\n   *\n   * This means the `isChecked` state will get out of sync with `ref.current.checked`,\n   * even though the input validation with work, the UI will not be up to date.\n   *\n   * Let's correct that by checking and syncing the state accordingly.\n   */\n\n  useSafeLayoutEffect(function () {\n    if (!inputRef.current) return;\n    var notInSync = inputRef.current.checked !== isChecked;\n\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked);\n    }\n  }, [inputRef.current]);\n  var getCheckboxProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    var onPressDown = function onPressDown(event) {\n      // On mousedown, the input blurs and returns focus to the `body`,\n      // we need to prevent this. Native checkboxes keeps focus on `input`\n      event.preventDefault();\n      setActive.on();\n    };\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-indeterminate\": dataAttr(isIndeterminate),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: callAllHandlers(props.onMouseDown, onPressDown),\n      onMouseUp: callAllHandlers(props.onMouseUp, setActive.off),\n      onMouseEnter: callAllHandlers(props.onMouseEnter, setHovered.on),\n      onMouseLeave: callAllHandlers(props.onMouseLeave, setHovered.off)\n    });\n  }, [isActive, isChecked, isDisabled, isFocused, isHovered, isIndeterminate, isInvalid, isReadOnly, setActive, setHovered.off, setHovered.on]);\n  var getRootProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, htmlProps, props, {\n      ref: mergeRefs(forwardedRef, function (node) {\n        if (!node) return;\n        setRootIsLabelElement(node.tagName === \"LABEL\");\n      }),\n      onClick: callAllHandlers(props.onClick, function () {\n        /**\n         * Accessibility:\n         *\n         * Ideally, `getRootProps` should be spread unto a `label` element.\n         *\n         * If the element was changed using the `as` prop or changing\n         * the dom node `getRootProps` is spread unto (to a `div` or `span`), we'll trigger\n         * click on the input when the element is clicked.\n         * @see Issue https://github.com/chakra-ui/chakra-ui/issues/3480\n         */\n        if (!rootIsLabelElement) {\n          var _inputRef$current;\n\n          (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.click();\n          focus(inputRef.current, {\n            nextTick: true\n          });\n        }\n      }),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid)\n    });\n  }, [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement]);\n  var getInputProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: mergeRefs(inputRef, forwardedRef),\n      type: \"checkbox\",\n      name: name,\n      value: value,\n      id: id,\n      tabIndex: tabIndex,\n      onChange: callAllHandlers(props.onChange, handleChange),\n      onBlur: callAllHandlers(props.onBlur, onBlurProp, setFocused.off),\n      onFocus: callAllHandlers(props.onFocus, onFocusProp, setFocused.on),\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n      onKeyUp: callAllHandlers(props.onKeyUp, onKeyUp),\n      required: isRequired,\n      checked: isChecked,\n      disabled: trulyDisabled,\n      readOnly: isReadOnly,\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n      \"aria-describedby\": ariaDescribedBy,\n      \"aria-disabled\": isDisabled,\n      style: visuallyHiddenStyle\n    });\n  }, [name, value, id, handleChange, setFocused.off, setFocused.on, onBlurProp, onFocusProp, onKeyDown, onKeyUp, isRequired, isChecked, trulyDisabled, isReadOnly, ariaLabel, ariaLabelledBy, ariaInvalid, isInvalid, ariaDescribedBy, isDisabled, tabIndex]);\n  var getLabelProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      onMouseDown: callAllHandlers(props.onMouseDown, stopEvent),\n      onTouchStart: callAllHandlers(props.onTouchStart, stopEvent),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid)\n    });\n  }, [isChecked, isDisabled, isInvalid]);\n  return {\n    state: {\n      isInvalid: isInvalid,\n      isFocused: isFocused,\n      isChecked: isChecked,\n      isActive: isActive,\n      isHovered: isHovered,\n      isIndeterminate: isIndeterminate,\n      isDisabled: isDisabled,\n      isReadOnly: isReadOnly,\n      isRequired: isRequired\n    },\n    getRootProps: getRootProps,\n    getCheckboxProps: getCheckboxProps,\n    getInputProps: getInputProps,\n    getLabelProps: getLabelProps,\n    htmlProps: htmlProps\n  };\n}\n/**\n * Prevent `onBlur` being fired when the checkbox label is touched\n */\n\n\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nvar _excluded = [\"spacing\", \"className\", \"children\", \"iconColor\", \"iconSize\", \"icon\", \"isChecked\", \"isDisabled\", \"onChange\"];\nvar CheckboxControl = chakra(\"span\", {\n  baseStyle: {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    verticalAlign: \"top\",\n    userSelect: \"none\",\n    flexShrink: 0\n  }\n});\nvar Label = chakra(\"label\", {\n  baseStyle: {\n    cursor: \"pointer\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    verticalAlign: \"top\",\n    position: \"relative\",\n    _disabled: {\n      cursor: \"not-allowed\"\n    }\n  }\n});\n/**\n * Checkbox\n *\n * React component used in forms when a user needs to select\n * multiple values from several options.\n *\n * @see Docs https://chakra-ui.com/checkbox\n */\n\nvar Checkbox = /*#__PURE__*/forwardRef(function (props, ref) {\n  var group = useCheckboxGroupContext();\n\n  var mergedProps = _extends({}, group, props);\n\n  var styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n  var ownProps = omitThemingProps(props);\n\n  var _ownProps$spacing = ownProps.spacing,\n      spacing = _ownProps$spacing === void 0 ? \"0.5rem\" : _ownProps$spacing,\n      className = ownProps.className,\n      children = ownProps.children,\n      iconColor = ownProps.iconColor,\n      iconSize = ownProps.iconSize,\n      _ownProps$icon = ownProps.icon,\n      icon = _ownProps$icon === void 0 ? /*#__PURE__*/React.createElement(CheckboxIcon, null) : _ownProps$icon,\n      isCheckedProp = ownProps.isChecked,\n      _ownProps$isDisabled = ownProps.isDisabled,\n      isDisabled = _ownProps$isDisabled === void 0 ? group == null ? void 0 : group.isDisabled : _ownProps$isDisabled,\n      onChangeProp = ownProps.onChange,\n      rest = _objectWithoutPropertiesLoose(ownProps, _excluded);\n\n  var isChecked = isCheckedProp;\n\n  if (group != null && group.value && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value);\n  }\n\n  var onChange = onChangeProp;\n\n  if (group != null && group.onChange && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp);\n  }\n\n  var _useCheckbox = useCheckbox(_extends({}, rest, {\n    isDisabled: isDisabled,\n    isChecked: isChecked,\n    onChange: onChange\n  })),\n      state = _useCheckbox.state,\n      getInputProps = _useCheckbox.getInputProps,\n      getCheckboxProps = _useCheckbox.getCheckboxProps,\n      getLabelProps = _useCheckbox.getLabelProps,\n      getRootProps = _useCheckbox.getRootProps;\n\n  var iconStyles = React.useMemo(function () {\n    return _extends({\n      opacity: state.isChecked || state.isIndeterminate ? 1 : 0,\n      transform: state.isChecked || state.isIndeterminate ? \"scale(1)\" : \"scale(0.95)\",\n      fontSize: iconSize,\n      color: iconColor\n    }, styles.icon);\n  }, [iconColor, iconSize, state.isChecked, state.isIndeterminate, styles.icon]);\n  var clonedIcon = /*#__PURE__*/React.cloneElement(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked\n  });\n  return /*#__PURE__*/React.createElement(Label, _extends({\n    __css: styles.container,\n    className: cx(\"chakra-checkbox\", className)\n  }, getRootProps()), /*#__PURE__*/React.createElement(\"input\", _extends({\n    className: \"chakra-checkbox__input\"\n  }, getInputProps({}, ref))), /*#__PURE__*/React.createElement(CheckboxControl, _extends({\n    __css: styles.control,\n    className: \"chakra-checkbox__control\"\n  }, getCheckboxProps()), clonedIcon), children && /*#__PURE__*/React.createElement(chakra.span, _extends({\n    className: \"chakra-checkbox__label\"\n  }, getLabelProps(), {\n    __css: _extends({\n      marginStart: spacing\n    }, styles.label)\n  }), children));\n});\n\nif (__DEV__) {\n  Checkbox.displayName = \"Checkbox\";\n}\n\nexport { Checkbox, CheckboxGroup, useCheckbox, useCheckboxGroup, useCheckboxGroupContext };","map":{"version":3,"sources":["/Users/kendrawing/Documents/Coding Projects:Practice/1 Repos:Deployed/React-Ecommerce-Site/node_modules/@chakra-ui/checkbox/dist/chakra-ui-checkbox.esm.js"],"names":["isInputEvent","addItem","removeItem","__DEV__","warn","dataAttr","callAllHandlers","focus","callAll","cx","createContext","mergeRefs","React","useCallback","useRef","useState","useCallbackRef","useControllableState","useBoolean","useControllableProp","useSafeLayoutEffect","chakra","forwardRef","useMultiStyleConfig","omitThemingProps","motion","AnimatePresence","visuallyHiddenStyle","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","useCheckboxGroup","props","_props","defaultValue","valueProp","value","onChange","isDisabled","isNative","onChangeProp","_useControllableState","setValue","handleChange","eventOrValue","isChecked","checked","includes","selectedValue","nextValue","getCheckboxProps","_extends2","checkedKey","_createContext","name","strict","CheckboxGroupProvider","useCheckboxGroupContext","CheckboxGroup","colorScheme","size","variant","children","_useCheckboxGroup","group","useMemo","createElement","displayName","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded$2","MotionSvg","custom","svg","CheckIcon","width","viewBox","variants","unchecked","opacity","strokeDashoffset","transition","duration","style","fill","strokeWidth","stroke","strokeDasharray","points","IndeterminateIcon","scaleX","x1","x2","y1","y2","CheckboxTransition","_ref","open","initial","div","scale","animate","exit","display","alignItems","justifyContent","height","CheckboxIcon","isIndeterminate","rest","IconEl","_excluded$1","useCheckbox","defaultIsChecked","_props$defaultChecked","defaultChecked","checkedProp","isFocusable","isReadOnly","isRequired","isInvalid","id","onBlur","onFocus","_props$tabIndex","tabIndex","undefined","ariaLabel","ariaLabelledBy","ariaInvalid","ariaDescribedBy","htmlProps","onBlurProp","onFocusProp","_useBoolean","isFocused","setFocused","_useBoolean2","isHovered","setHovered","_useBoolean3","isActive","setActive","inputRef","_useState","rootIsLabelElement","setRootIsLabelElement","_useState2","checkedState","setCheckedState","_useControllableProp","isControlled","condition","message","event","preventDefault","current","indeterminate","Boolean","trulyDisabled","onKeyDown","on","onKeyUp","off","notInSync","forwardedRef","onPressDown","ref","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","getRootProps","node","tagName","onClick","_inputRef$current","click","nextTick","getInputProps","type","required","disabled","readOnly","getLabelProps","stopEvent","onTouchStart","state","stopPropagation","_excluded","CheckboxControl","baseStyle","verticalAlign","userSelect","flexShrink","Label","cursor","position","_disabled","Checkbox","mergedProps","styles","ownProps","_ownProps$spacing","spacing","className","iconColor","iconSize","_ownProps$icon","icon","isCheckedProp","_ownProps$isDisabled","_useCheckbox","iconStyles","transform","fontSize","color","clonedIcon","cloneElement","__css","container","control","span","marginStart","label"],"mappings":"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","sourcesContent":["import { isInputEvent, addItem, removeItem, __DEV__, warn, dataAttr, callAllHandlers, focus, callAll, cx } from '@chakra-ui/utils';\nimport { createContext, mergeRefs } from '@chakra-ui/react-utils';\nimport * as React from 'react';\nimport { useCallback, useRef, useState } from 'react';\nimport { useCallbackRef, useControllableState, useBoolean, useControllableProp, useSafeLayoutEffect } from '@chakra-ui/hooks';\nimport { chakra, forwardRef, useMultiStyleConfig, omitThemingProps } from '@chakra-ui/system';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { visuallyHiddenStyle } from '@chakra-ui/visually-hidden';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n/**\n * React hook that provides all the state management logic\n * for a group of checkboxes.\n *\n * It is consumed by the `CheckboxGroup` component\n */\nfunction useCheckboxGroup(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      defaultValue = _props.defaultValue,\n      valueProp = _props.value,\n      onChange = _props.onChange,\n      isDisabled = _props.isDisabled,\n      isNative = _props.isNative;\n  var onChangeProp = useCallbackRef(onChange);\n\n  var _useControllableState = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue || [],\n    onChange: onChangeProp\n  }),\n      value = _useControllableState[0],\n      setValue = _useControllableState[1];\n\n  var handleChange = useCallback(function (eventOrValue) {\n    if (!value) return;\n    var isChecked = isInputEvent(eventOrValue) ? eventOrValue.target.checked : !value.includes(eventOrValue);\n    var selectedValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n    var nextValue = isChecked ? addItem(value, selectedValue) : removeItem(value, selectedValue);\n    setValue(nextValue);\n  }, [setValue, value]);\n  var getCheckboxProps = useCallback(function (props) {\n    var _extends2;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    var checkedKey = isNative ? \"checked\" : \"isChecked\";\n    return _extends({}, props, (_extends2 = {}, _extends2[checkedKey] = value.includes(props.value), _extends2.onChange = handleChange, _extends2));\n  }, [handleChange, isNative, value]);\n  return {\n    value: value,\n    isDisabled: isDisabled,\n    onChange: handleChange,\n    setValue: setValue,\n    getCheckboxProps: getCheckboxProps\n  };\n}\n\nvar _createContext = createContext({\n  name: \"CheckboxGroupContext\",\n  strict: false\n}),\n    CheckboxGroupProvider = _createContext[0],\n    useCheckboxGroupContext = _createContext[1];\n/**\n * Used for multiple checkboxes which are bound in one group,\n * and it indicates whether one or more options are selected.\n *\n * @see Docs https://chakra-ui.com/checkbox\n */\n\nvar CheckboxGroup = function CheckboxGroup(props) {\n  var colorScheme = props.colorScheme,\n      size = props.size,\n      variant = props.variant,\n      children = props.children,\n      isDisabled = props.isDisabled;\n\n  var _useCheckboxGroup = useCheckboxGroup(props),\n      value = _useCheckboxGroup.value,\n      onChange = _useCheckboxGroup.onChange;\n\n  var group = React.useMemo(function () {\n    return {\n      size: size,\n      onChange: onChange,\n      colorScheme: colorScheme,\n      value: value,\n      variant: variant,\n      isDisabled: isDisabled\n    };\n  }, [size, onChange, colorScheme, value, variant, isDisabled]);\n  return /*#__PURE__*/React.createElement(CheckboxGroupProvider, {\n    value: group\n  }, children);\n};\n\nif (__DEV__) {\n  CheckboxGroup.displayName = \"CheckboxGroup\";\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded$2 = [\"isIndeterminate\", \"isChecked\"];\n\nvar MotionSvg = \"custom\" in motion ? motion.custom(chakra.svg) : motion(chakra.svg);\n\nvar CheckIcon = function CheckIcon(props) {\n  return /*#__PURE__*/React.createElement(MotionSvg, _extends({\n    width: \"1.2em\",\n    viewBox: \"0 0 12 10\",\n    variants: {\n      unchecked: {\n        opacity: 0,\n        strokeDashoffset: 16\n      },\n      checked: {\n        opacity: 1,\n        strokeDashoffset: 0,\n        transition: {\n          duration: 0.2\n        }\n      }\n    },\n    style: {\n      fill: \"none\",\n      strokeWidth: 2,\n      stroke: \"currentColor\",\n      strokeDasharray: 16\n    }\n  }, props), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"1.5 6 4.5 9 10.5 1\"\n  }));\n};\n\nvar IndeterminateIcon = function IndeterminateIcon(props) {\n  return /*#__PURE__*/React.createElement(MotionSvg, _extends({\n    width: \"1.2em\",\n    viewBox: \"0 0 24 24\",\n    variants: {\n      unchecked: {\n        scaleX: 0.65,\n        opacity: 0\n      },\n      checked: {\n        scaleX: 1,\n        opacity: 1,\n        transition: {\n          scaleX: {\n            duration: 0\n          },\n          opacity: {\n            duration: 0.02\n          }\n        }\n      }\n    },\n    style: {\n      stroke: \"currentColor\",\n      strokeWidth: 4\n    }\n  }, props), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"21\",\n    x2: \"3\",\n    y1: \"12\",\n    y2: \"12\"\n  }));\n};\n\nvar CheckboxTransition = function CheckboxTransition(_ref) {\n  var open = _ref.open,\n      children = _ref.children;\n  return /*#__PURE__*/React.createElement(AnimatePresence, {\n    initial: false\n  }, open && /*#__PURE__*/React.createElement(motion.div, {\n    variants: {\n      unchecked: {\n        scale: 0.5\n      },\n      checked: {\n        scale: 1\n      }\n    },\n    initial: \"unchecked\",\n    animate: \"checked\",\n    exit: \"unchecked\",\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100%\"\n    }\n  }, children));\n};\n\n/**\n * CheckboxIcon is used to visually indicate the checked or indeterminate\n * state of a checkbox.\n *\n * @todo allow users pass their own icon svgs\n */\nvar CheckboxIcon = function CheckboxIcon(props) {\n  var isIndeterminate = props.isIndeterminate,\n      isChecked = props.isChecked,\n      rest = _objectWithoutPropertiesLoose(props, _excluded$2);\n\n  var IconEl = isIndeterminate ? IndeterminateIcon : CheckIcon;\n  return /*#__PURE__*/React.createElement(CheckboxTransition, {\n    open: isChecked || isIndeterminate\n  }, /*#__PURE__*/React.createElement(IconEl, rest));\n};\n\nvar _excluded$1 = [\"defaultIsChecked\", \"defaultChecked\", \"isChecked\", \"isFocusable\", \"isDisabled\", \"isReadOnly\", \"isRequired\", \"onChange\", \"isIndeterminate\", \"isInvalid\", \"name\", \"value\", \"id\", \"onBlur\", \"onFocus\", \"tabIndex\", \"aria-label\", \"aria-labelledby\", \"aria-invalid\", \"aria-describedby\"];\n\n/**\n * useCheckbox that provides all the state and focus management logic\n * for a checkbox. It is consumed by the `Checkbox` component\n *\n * @see Docs https://chakra-ui.com/checkbox#hooks\n */\nfunction useCheckbox(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      defaultIsChecked = _props.defaultIsChecked,\n      _props$defaultChecked = _props.defaultChecked,\n      defaultChecked = _props$defaultChecked === void 0 ? defaultIsChecked : _props$defaultChecked,\n      checkedProp = _props.isChecked,\n      isFocusable = _props.isFocusable,\n      isDisabled = _props.isDisabled,\n      isReadOnly = _props.isReadOnly,\n      isRequired = _props.isRequired,\n      onChange = _props.onChange,\n      isIndeterminate = _props.isIndeterminate,\n      isInvalid = _props.isInvalid,\n      name = _props.name,\n      value = _props.value,\n      id = _props.id,\n      onBlur = _props.onBlur,\n      onFocus = _props.onFocus,\n      _props$tabIndex = _props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? undefined : _props$tabIndex,\n      ariaLabel = _props[\"aria-label\"],\n      ariaLabelledBy = _props[\"aria-labelledby\"],\n      ariaInvalid = _props[\"aria-invalid\"],\n      ariaDescribedBy = _props[\"aria-describedby\"],\n      htmlProps = _objectWithoutPropertiesLoose(_props, _excluded$1);\n\n  var onChangeProp = useCallbackRef(onChange);\n  var onBlurProp = useCallbackRef(onBlur);\n  var onFocusProp = useCallbackRef(onFocus);\n\n  var _useBoolean = useBoolean(),\n      isFocused = _useBoolean[0],\n      setFocused = _useBoolean[1];\n\n  var _useBoolean2 = useBoolean(),\n      isHovered = _useBoolean2[0],\n      setHovered = _useBoolean2[1];\n\n  var _useBoolean3 = useBoolean(),\n      isActive = _useBoolean3[0],\n      setActive = _useBoolean3[1];\n\n  var inputRef = useRef(null);\n\n  var _useState = useState(true),\n      rootIsLabelElement = _useState[0],\n      setRootIsLabelElement = _useState[1];\n\n  var _useState2 = useState(!!defaultChecked),\n      checkedState = _useState2[0],\n      setCheckedState = _useState2[1];\n\n  var _useControllableProp = useControllableProp(checkedProp, checkedState),\n      isControlled = _useControllableProp[0],\n      isChecked = _useControllableProp[1];\n\n  warn({\n    condition: !!defaultIsChecked,\n    message: 'The \"defaultIsChecked\" prop has been deprecated and will be removed in a future version. ' + 'Please use the \"defaultChecked\" prop instead, which mirrors default React checkbox behavior.'\n  });\n  var handleChange = useCallback(function (event) {\n    if (isReadOnly || isDisabled) {\n      event.preventDefault();\n      return;\n    }\n\n    if (!isControlled) {\n      if (isChecked) {\n        setCheckedState(event.target.checked);\n      } else {\n        setCheckedState(isIndeterminate ? true : event.target.checked);\n      }\n    }\n\n    onChangeProp == null ? void 0 : onChangeProp(event);\n  }, [isReadOnly, isDisabled, isChecked, isControlled, isIndeterminate, onChangeProp]);\n  useSafeLayoutEffect(function () {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate);\n    }\n  }, [isIndeterminate]);\n  var trulyDisabled = isDisabled && !isFocusable;\n  var onKeyDown = useCallback(function (event) {\n    if (event.key === \" \") {\n      setActive.on();\n    }\n  }, [setActive]);\n  var onKeyUp = useCallback(function (event) {\n    if (event.key === \" \") {\n      setActive.off();\n    }\n  }, [setActive]);\n  /**\n   * Sync state with uncontrolled form libraries like `react-hook-form`.\n   *\n   * These libraries set the checked value for input fields\n   * using their refs. For the checkbox, it sets `ref.current.checked = true | false` directly.\n   *\n   * This means the `isChecked` state will get out of sync with `ref.current.checked`,\n   * even though the input validation with work, the UI will not be up to date.\n   *\n   * Let's correct that by checking and syncing the state accordingly.\n   */\n\n  useSafeLayoutEffect(function () {\n    if (!inputRef.current) return;\n    var notInSync = inputRef.current.checked !== isChecked;\n\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked);\n    }\n  }, [inputRef.current]);\n  var getCheckboxProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    var onPressDown = function onPressDown(event) {\n      // On mousedown, the input blurs and returns focus to the `body`,\n      // we need to prevent this. Native checkboxes keeps focus on `input`\n      event.preventDefault();\n      setActive.on();\n    };\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-indeterminate\": dataAttr(isIndeterminate),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: callAllHandlers(props.onMouseDown, onPressDown),\n      onMouseUp: callAllHandlers(props.onMouseUp, setActive.off),\n      onMouseEnter: callAllHandlers(props.onMouseEnter, setHovered.on),\n      onMouseLeave: callAllHandlers(props.onMouseLeave, setHovered.off)\n    });\n  }, [isActive, isChecked, isDisabled, isFocused, isHovered, isIndeterminate, isInvalid, isReadOnly, setActive, setHovered.off, setHovered.on]);\n  var getRootProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, htmlProps, props, {\n      ref: mergeRefs(forwardedRef, function (node) {\n        if (!node) return;\n        setRootIsLabelElement(node.tagName === \"LABEL\");\n      }),\n      onClick: callAllHandlers(props.onClick, function () {\n        /**\n         * Accessibility:\n         *\n         * Ideally, `getRootProps` should be spread unto a `label` element.\n         *\n         * If the element was changed using the `as` prop or changing\n         * the dom node `getRootProps` is spread unto (to a `div` or `span`), we'll trigger\n         * click on the input when the element is clicked.\n         * @see Issue https://github.com/chakra-ui/chakra-ui/issues/3480\n         */\n        if (!rootIsLabelElement) {\n          var _inputRef$current;\n\n          (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.click();\n          focus(inputRef.current, {\n            nextTick: true\n          });\n        }\n      }),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid)\n    });\n  }, [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement]);\n  var getInputProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: mergeRefs(inputRef, forwardedRef),\n      type: \"checkbox\",\n      name: name,\n      value: value,\n      id: id,\n      tabIndex: tabIndex,\n      onChange: callAllHandlers(props.onChange, handleChange),\n      onBlur: callAllHandlers(props.onBlur, onBlurProp, setFocused.off),\n      onFocus: callAllHandlers(props.onFocus, onFocusProp, setFocused.on),\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n      onKeyUp: callAllHandlers(props.onKeyUp, onKeyUp),\n      required: isRequired,\n      checked: isChecked,\n      disabled: trulyDisabled,\n      readOnly: isReadOnly,\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n      \"aria-describedby\": ariaDescribedBy,\n      \"aria-disabled\": isDisabled,\n      style: visuallyHiddenStyle\n    });\n  }, [name, value, id, handleChange, setFocused.off, setFocused.on, onBlurProp, onFocusProp, onKeyDown, onKeyUp, isRequired, isChecked, trulyDisabled, isReadOnly, ariaLabel, ariaLabelledBy, ariaInvalid, isInvalid, ariaDescribedBy, isDisabled, tabIndex]);\n  var getLabelProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      onMouseDown: callAllHandlers(props.onMouseDown, stopEvent),\n      onTouchStart: callAllHandlers(props.onTouchStart, stopEvent),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid)\n    });\n  }, [isChecked, isDisabled, isInvalid]);\n  return {\n    state: {\n      isInvalid: isInvalid,\n      isFocused: isFocused,\n      isChecked: isChecked,\n      isActive: isActive,\n      isHovered: isHovered,\n      isIndeterminate: isIndeterminate,\n      isDisabled: isDisabled,\n      isReadOnly: isReadOnly,\n      isRequired: isRequired\n    },\n    getRootProps: getRootProps,\n    getCheckboxProps: getCheckboxProps,\n    getInputProps: getInputProps,\n    getLabelProps: getLabelProps,\n    htmlProps: htmlProps\n  };\n}\n/**\n * Prevent `onBlur` being fired when the checkbox label is touched\n */\n\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nvar _excluded = [\"spacing\", \"className\", \"children\", \"iconColor\", \"iconSize\", \"icon\", \"isChecked\", \"isDisabled\", \"onChange\"];\nvar CheckboxControl = chakra(\"span\", {\n  baseStyle: {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    verticalAlign: \"top\",\n    userSelect: \"none\",\n    flexShrink: 0\n  }\n});\nvar Label = chakra(\"label\", {\n  baseStyle: {\n    cursor: \"pointer\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    verticalAlign: \"top\",\n    position: \"relative\",\n    _disabled: {\n      cursor: \"not-allowed\"\n    }\n  }\n});\n\n/**\n * Checkbox\n *\n * React component used in forms when a user needs to select\n * multiple values from several options.\n *\n * @see Docs https://chakra-ui.com/checkbox\n */\nvar Checkbox = /*#__PURE__*/forwardRef(function (props, ref) {\n  var group = useCheckboxGroupContext();\n\n  var mergedProps = _extends({}, group, props);\n\n  var styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n  var ownProps = omitThemingProps(props);\n\n  var _ownProps$spacing = ownProps.spacing,\n      spacing = _ownProps$spacing === void 0 ? \"0.5rem\" : _ownProps$spacing,\n      className = ownProps.className,\n      children = ownProps.children,\n      iconColor = ownProps.iconColor,\n      iconSize = ownProps.iconSize,\n      _ownProps$icon = ownProps.icon,\n      icon = _ownProps$icon === void 0 ? /*#__PURE__*/React.createElement(CheckboxIcon, null) : _ownProps$icon,\n      isCheckedProp = ownProps.isChecked,\n      _ownProps$isDisabled = ownProps.isDisabled,\n      isDisabled = _ownProps$isDisabled === void 0 ? group == null ? void 0 : group.isDisabled : _ownProps$isDisabled,\n      onChangeProp = ownProps.onChange,\n      rest = _objectWithoutPropertiesLoose(ownProps, _excluded);\n\n  var isChecked = isCheckedProp;\n\n  if (group != null && group.value && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value);\n  }\n\n  var onChange = onChangeProp;\n\n  if (group != null && group.onChange && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp);\n  }\n\n  var _useCheckbox = useCheckbox(_extends({}, rest, {\n    isDisabled: isDisabled,\n    isChecked: isChecked,\n    onChange: onChange\n  })),\n      state = _useCheckbox.state,\n      getInputProps = _useCheckbox.getInputProps,\n      getCheckboxProps = _useCheckbox.getCheckboxProps,\n      getLabelProps = _useCheckbox.getLabelProps,\n      getRootProps = _useCheckbox.getRootProps;\n\n  var iconStyles = React.useMemo(function () {\n    return _extends({\n      opacity: state.isChecked || state.isIndeterminate ? 1 : 0,\n      transform: state.isChecked || state.isIndeterminate ? \"scale(1)\" : \"scale(0.95)\",\n      fontSize: iconSize,\n      color: iconColor\n    }, styles.icon);\n  }, [iconColor, iconSize, state.isChecked, state.isIndeterminate, styles.icon]);\n  var clonedIcon = /*#__PURE__*/React.cloneElement(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked\n  });\n  return /*#__PURE__*/React.createElement(Label, _extends({\n    __css: styles.container,\n    className: cx(\"chakra-checkbox\", className)\n  }, getRootProps()), /*#__PURE__*/React.createElement(\"input\", _extends({\n    className: \"chakra-checkbox__input\"\n  }, getInputProps({}, ref))), /*#__PURE__*/React.createElement(CheckboxControl, _extends({\n    __css: styles.control,\n    className: \"chakra-checkbox__control\"\n  }, getCheckboxProps()), clonedIcon), children && /*#__PURE__*/React.createElement(chakra.span, _extends({\n    className: \"chakra-checkbox__label\"\n  }, getLabelProps(), {\n    __css: _extends({\n      marginStart: spacing\n    }, styles.label)\n  }), children));\n});\n\nif (__DEV__) {\n  Checkbox.displayName = \"Checkbox\";\n}\n\nexport { Checkbox, CheckboxGroup, useCheckbox, useCheckboxGroup, useCheckboxGroupContext };\n"]},"metadata":{},"sourceType":"module"}